

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Sep 17 17:24:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TRISEbits	set	3990
    49  0000                     _TRISE	set	3990
    50  0000                     _TRISB	set	3987
    51  0000                     _OSCCON	set	4051
    52                           
    53                           ; #config settings
    54                           
    55                           	psect	cinit
    56  007F8A                     __pcinit:
    57                           	callstack 0
    58  007F8A                     start_initialization:
    59                           	callstack 0
    60  007F8A                     __initialization:
    61                           	callstack 0
    62  007F8A                     end_of_initialization:
    63                           	callstack 0
    64  007F8A                     __end_of__initialization:
    65                           	callstack 0
    66  007F8A  0100               	movlb	0
    67  007F8C  EFC8  F03F         	goto	_main	;jump to C main() function
    68                           
    69                           	psect	cstackCOMRAM
    70  000001                     __pcstackCOMRAM:
    71                           	callstack 0
    72  000001                     MSdelay@prmTiempo:
    73                           	callstack 0
    74                           
    75                           ; 2 bytes @ 0x0
    76  000001                     	ds	2
    77  000003                     MSdelay@varContador1:
    78                           	callstack 0
    79                           
    80                           ; 2 bytes @ 0x2
    81  000003                     	ds	2
    82  000005                     MSdelay@varContador2:
    83                           	callstack 0
    84                           
    85                           ; 2 bytes @ 0x4
    86  000005                     	ds	2
    87  000007                     
    88                           ; 1 bytes @ 0x6
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 5 in file "main.c"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;		None
    99 ;; Return value:  Size  Location     Type
   100 ;;                  1    wreg      void 
   101 ;; Registers used:
   102 ;;		wreg, status,2, status,0, cstack
   103 ;; Tracked objects:
   104 ;;		On entry : 0/0
   105 ;;		On exit  : 0/0
   106 ;;		Unchanged: 0/0
   107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   108 ;;      Params:         0       0       0       0       0       0       0       0       0
   109 ;;      Locals:         0       0       0       0       0       0       0       0       0
   110 ;;      Temps:          0       0       0       0       0       0       0       0       0
   111 ;;      Totals:         0       0       0       0       0       0       0       0       0
   112 ;;Total ram usage:        0 bytes
   113 ;; Hardware stack levels required when called: 1
   114 ;; This function calls:
   115 ;;		_MSdelay
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           	psect	text0
   122  007F90                     __ptext0:
   123                           	callstack 0
   124  007F90                     _main:
   125                           	callstack 30
   126  007F90                     
   127                           ;main.c: 6:     OSCCON=00;
   128  007F90  0E00               	movlw	0
   129  007F92  6ED3               	movwf	211,c	;volatile
   130                           
   131                           ;main.c: 7:     TRISB = 1;
   132  007F94  0E01               	movlw	1
   133  007F96  6E93               	movwf	147,c	;volatile
   134                           
   135                           ;main.c: 9:     TRISE = 1;
   136  007F98  0E01               	movlw	1
   137  007F9A  6E96               	movwf	150,c	;volatile
   138  007F9C                     
   139                           ;main.c: 10:     TRISEbits.RE1 = 1;
   140  007F9C  8296               	bsf	150,1,c	;volatile
   141  007F9E                     
   142                           ;main.c: 11:     TRISEbits.RE2 = 1;
   143  007F9E  8496               	bsf	150,2,c	;volatile
   144  007FA0                     
   145                           ;main.c: 12:     MSdelay(1000);
   146  007FA0  0E03               	movlw	3
   147  007FA2  6E02               	movwf	(MSdelay@prmTiempo+1)^0,c
   148  007FA4  0EE8               	movlw	232
   149  007FA6  6E01               	movwf	MSdelay@prmTiempo^0,c
   150  007FA8  ECDB  F03F         	call	_MSdelay	;wreg free
   151  007FAC                     
   152                           ;main.c: 13:     TRISEbits.RE0 = 0;
   153  007FAC  9096               	bcf	150,0,c	;volatile
   154  007FAE                     
   155                           ;main.c: 14:     TRISEbits.RE1 = 0;
   156  007FAE  9296               	bcf	150,1,c	;volatile
   157  007FB0                     
   158                           ;main.c: 15:     TRISEbits.RE2 = 0;
   159  007FB0  9496               	bcf	150,2,c	;volatile
   160  007FB2  EF00  F000         	goto	start
   161  007FB6                     __end_of_main:
   162                           	callstack 0
   163                           
   164 ;; *************** function _MSdelay *****************
   165 ;; Defined at:
   166 ;;		line 2 in file "utils.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;  prmTiempo       2    0[COMRAM] unsigned int 
   169 ;; Auto vars:     Size  Location     Type
   170 ;;  varContador2    2    4[COMRAM] unsigned int 
   171 ;;  varContador1    2    2[COMRAM] unsigned int 
   172 ;; Return value:  Size  Location     Type
   173 ;;                  1    wreg      void 
   174 ;; Registers used:
   175 ;;		wreg, status,2, status,0
   176 ;; Tracked objects:
   177 ;;		On entry : 0/0
   178 ;;		On exit  : 0/0
   179 ;;		Unchanged: 0/0
   180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   181 ;;      Params:         2       0       0       0       0       0       0       0       0
   182 ;;      Locals:         4       0       0       0       0       0       0       0       0
   183 ;;      Temps:          0       0       0       0       0       0       0       0       0
   184 ;;      Totals:         6       0       0       0       0       0       0       0       0
   185 ;;Total ram usage:        6 bytes
   186 ;; Hardware stack levels used: 1
   187 ;; This function calls:
   188 ;;		Nothing
   189 ;; This function is called by:
   190 ;;		_main
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text1
   195  007FB6                     __ptext1:
   196                           	callstack 0
   197  007FB6                     _MSdelay:
   198                           	callstack 30
   199  007FB6                     
   200                           ;utils.c: 2: void MSdelay(unsigned int prmTiempo);utils.c: 3: {;utils.c: 4:     unsigned
      +                           int varContador1,varContador2;;utils.c: 5:     for(varContador1=0;varContador1<prmTiemp
      +                          o;varContador1++)
   201  007FB6  0E00               	movlw	0
   202  007FB8  6E04               	movwf	(MSdelay@varContador1+1)^0,c
   203  007FBA  0E00               	movlw	0
   204  007FBC  6E03               	movwf	MSdelay@varContador1^0,c
   205  007FBE  EFF4  F03F         	goto	l745
   206  007FC2                     l733:
   207                           
   208                           ;utils.c: 6:          for(varContador2=0;varContador2<165;varContador2++);
   209  007FC2  0E00               	movlw	0
   210  007FC4  6E06               	movwf	(MSdelay@varContador2+1)^0,c
   211  007FC6  0E00               	movlw	0
   212  007FC8  6E05               	movwf	MSdelay@varContador2^0,c
   213  007FCA                     l739:
   214  007FCA  4A05               	infsnz	MSdelay@varContador2^0,f,c
   215  007FCC  2A06               	incf	(MSdelay@varContador2+1)^0,f,c
   216  007FCE  5006               	movf	(MSdelay@varContador2+1)^0,w,c
   217  007FD0  E109               	bnz	u30
   218  007FD2  0EA5               	movlw	165
   219  007FD4  5C05               	subwf	MSdelay@varContador2^0,w,c
   220  007FD6  A0D8               	btfss	status,0,c
   221  007FD8  EFF0  F03F         	goto	u31
   222  007FDC  EFF2  F03F         	goto	u30
   223  007FE0                     u31:
   224  007FE0  EFE5  F03F         	goto	l739
   225  007FE4                     u30:
   226  007FE4  4A03               	infsnz	MSdelay@varContador1^0,f,c
   227  007FE6  2A04               	incf	(MSdelay@varContador1+1)^0,f,c
   228  007FE8                     l745:
   229  007FE8  5001               	movf	MSdelay@prmTiempo^0,w,c
   230  007FEA  5C03               	subwf	MSdelay@varContador1^0,w,c
   231  007FEC  5002               	movf	(MSdelay@prmTiempo+1)^0,w,c
   232  007FEE  5804               	subwfb	(MSdelay@varContador1+1)^0,w,c
   233  007FF0  A0D8               	btfss	status,0,c
   234  007FF2  EFFD  F03F         	goto	u41
   235  007FF6  EFFF  F03F         	goto	u40
   236  007FFA                     u41:
   237  007FFA  EFE1  F03F         	goto	l733
   238  007FFE                     u40:
   239  007FFE  0012               	return		;funcret
   240  008000                     __end_of_MSdelay:
   241                           	callstack 0
   242  0000                     
   243                           	psect	rparam
   244  0000                     
   245                           	psect	idloc
   246                           
   247                           ;Config register IDLOC0 @ 0x200000
   248                           ;	unspecified, using default values
   249  200000                     	org	2097152
   250  200000  FF                 	db	255
   251                           
   252                           ;Config register IDLOC1 @ 0x200001
   253                           ;	unspecified, using default values
   254  200001                     	org	2097153
   255  200001  FF                 	db	255
   256                           
   257                           ;Config register IDLOC2 @ 0x200002
   258                           ;	unspecified, using default values
   259  200002                     	org	2097154
   260  200002  FF                 	db	255
   261                           
   262                           ;Config register IDLOC3 @ 0x200003
   263                           ;	unspecified, using default values
   264  200003                     	org	2097155
   265  200003  FF                 	db	255
   266                           
   267                           ;Config register IDLOC4 @ 0x200004
   268                           ;	unspecified, using default values
   269  200004                     	org	2097156
   270  200004  FF                 	db	255
   271                           
   272                           ;Config register IDLOC5 @ 0x200005
   273                           ;	unspecified, using default values
   274  200005                     	org	2097157
   275  200005  FF                 	db	255
   276                           
   277                           ;Config register IDLOC6 @ 0x200006
   278                           ;	unspecified, using default values
   279  200006                     	org	2097158
   280  200006  FF                 	db	255
   281                           
   282                           ;Config register IDLOC7 @ 0x200007
   283                           ;	unspecified, using default values
   284  200007                     	org	2097159
   285  200007  FF                 	db	255
   286                           
   287                           	psect	config
   288                           
   289                           ;Config register CONFIG1L @ 0x300000
   290                           ;	PLL Prescaler Selection bits
   291                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   292                           ;	System Clock Postscaler Selection bits
   293                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   294                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   295                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   296  300000                     	org	3145728
   297  300000  00                 	db	0
   298                           
   299                           ;Config register CONFIG1H @ 0x300001
   300                           ;	Oscillator Selection bits
   301                           ;	FOSC = INTOSC_XT, Internal oscillator, XT used by USB (INTXT)
   302                           ;	Fail-Safe Clock Monitor Enable bit
   303                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   304                           ;	Internal/External Oscillator Switchover bit
   305                           ;	IESO = OFF, Oscillator Switchover mode disabled
   306  300001                     	org	3145729
   307  300001  0A                 	db	10
   308                           
   309                           ;Config register CONFIG2L @ 0x300002
   310                           ;	Power-up Timer Enable bit
   311                           ;	PWRT = OFF, PWRT disabled
   312                           ;	Brown-out Reset Enable bits
   313                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   314                           ;	Brown-out Reset Voltage bits
   315                           ;	BORV = 3, Minimum setting 2.05V
   316                           ;	USB Voltage Regulator Enable bit
   317                           ;	VREGEN = OFF, USB voltage regulator disabled
   318  300002                     	org	3145730
   319  300002  1F                 	db	31
   320                           
   321                           ;Config register CONFIG2H @ 0x300003
   322                           ;	Watchdog Timer Enable bit
   323                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   324                           ;	Watchdog Timer Postscale Select bits
   325                           ;	WDTPS = 32768, 1:32768
   326  300003                     	org	3145731
   327  300003  1E                 	db	30
   328                           
   329                           ; Padding undefined space
   330  300004                     	org	3145732
   331  300004  FF                 	db	255
   332                           
   333                           ;Config register CONFIG3H @ 0x300005
   334                           ;	CCP2 MUX bit
   335                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   336                           ;	PORTB A/D Enable bit
   337                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   338                           ;	Low-Power Timer 1 Oscillator Enable bit
   339                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   340                           ;	MCLR Pin Enable bit
   341                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   342  300005                     	org	3145733
   343  300005  83                 	db	131
   344                           
   345                           ;Config register CONFIG4L @ 0x300006
   346                           ;	Stack Full/Underflow Reset Enable bit
   347                           ;	STVREN = ON, Stack full/underflow will cause Reset
   348                           ;	Single-Supply ICSP Enable bit
   349                           ;	LVP = ON, Single-Supply ICSP enabled
   350                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   351                           ;	ICPRT = OFF, ICPORT disabled
   352                           ;	Extended Instruction Set Enable bit
   353                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   354                           ;	Background Debugger Enable bit
   355                           ;	DEBUG = 0x1, unprogrammed default
   356  300006                     	org	3145734
   357  300006  85                 	db	133
   358                           
   359                           ; Padding undefined space
   360  300007                     	org	3145735
   361  300007  FF                 	db	255
   362                           
   363                           ;Config register CONFIG5L @ 0x300008
   364                           ;	Code Protection bit
   365                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   366                           ;	Code Protection bit
   367                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   368                           ;	Code Protection bit
   369                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   370                           ;	Code Protection bit
   371                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   372  300008                     	org	3145736
   373  300008  0F                 	db	15
   374                           
   375                           ;Config register CONFIG5H @ 0x300009
   376                           ;	Boot Block Code Protection bit
   377                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   378                           ;	Data EEPROM Code Protection bit
   379                           ;	CPD = OFF, Data EEPROM is not code-protected
   380  300009                     	org	3145737
   381  300009  C0                 	db	192
   382                           
   383                           ;Config register CONFIG6L @ 0x30000A
   384                           ;	Write Protection bit
   385                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   386                           ;	Write Protection bit
   387                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   388                           ;	Write Protection bit
   389                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   390                           ;	Write Protection bit
   391                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   392  30000A                     	org	3145738
   393  30000A  0F                 	db	15
   394                           
   395                           ;Config register CONFIG6H @ 0x30000B
   396                           ;	Configuration Register Write Protection bit
   397                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   398                           ;	Boot Block Write Protection bit
   399                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   400                           ;	Data EEPROM Write Protection bit
   401                           ;	WRTD = OFF, Data EEPROM is not write-protected
   402  30000B                     	org	3145739
   403  30000B  E0                 	db	224
   404                           
   405                           ;Config register CONFIG7L @ 0x30000C
   406                           ;	Table Read Protection bit
   407                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   408                           ;	Table Read Protection bit
   409                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   410                           ;	Table Read Protection bit
   411                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   412                           ;	Table Read Protection bit
   413                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   414  30000C                     	org	3145740
   415  30000C  0F                 	db	15
   416                           
   417                           ;Config register CONFIG7H @ 0x30000D
   418                           ;	Boot Block Table Read Protection bit
   419                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   420  30000D                     	org	3145741
   421  30000D  40                 	db	64
   422                           tosu	equ	0xFFF
   423                           tosh	equ	0xFFE
   424                           tosl	equ	0xFFD
   425                           stkptr	equ	0xFFC
   426                           pclatu	equ	0xFFB
   427                           pclath	equ	0xFFA
   428                           pcl	equ	0xFF9
   429                           tblptru	equ	0xFF8
   430                           tblptrh	equ	0xFF7
   431                           tblptrl	equ	0xFF6
   432                           tablat	equ	0xFF5
   433                           prodh	equ	0xFF4
   434                           prodl	equ	0xFF3
   435                           indf0	equ	0xFEF
   436                           postinc0	equ	0xFEE
   437                           postdec0	equ	0xFED
   438                           preinc0	equ	0xFEC
   439                           plusw0	equ	0xFEB
   440                           fsr0h	equ	0xFEA
   441                           fsr0l	equ	0xFE9
   442                           wreg	equ	0xFE8
   443                           indf1	equ	0xFE7
   444                           postinc1	equ	0xFE6
   445                           postdec1	equ	0xFE5
   446                           preinc1	equ	0xFE4
   447                           plusw1	equ	0xFE3
   448                           fsr1h	equ	0xFE2
   449                           fsr1l	equ	0xFE1
   450                           bsr	equ	0xFE0
   451                           indf2	equ	0xFDF
   452                           postinc2	equ	0xFDE
   453                           postdec2	equ	0xFDD
   454                           preinc2	equ	0xFDC
   455                           plusw2	equ	0xFDB
   456                           fsr2h	equ	0xFDA
   457                           fsr2l	equ	0xFD9
   458                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     168
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     168
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Sep 17 17:24:52 2021

                     l23 7FFE                       l15 7FB2                       u30 7FE4  
                     u31 7FE0                       u40 7FFE                       u41 7FFA  
                    l731 7FB6                      l741 7FCE                      l733 7FC2  
                    l743 7FE4                      l751 7F9E                      l745 7FE8  
                    l753 7FA0                      l739 7FCA                      l755 7FAC  
                    l747 7F90                      l757 7FAE                      l749 7F9C  
                    l759 7FB0                     _main 7F90                     start 0000  
        __end_of_MSdelay 8000             ___param_bank 000000                    ?_main 0001  
                  _TRISB 000F93                    _TRISE 000F96                    status 000FD8  
        __initialization 7F8A             __end_of_main 7FB6                   ??_main 0007  
          __activetblptr 000000                ??_MSdelay 0003                   _OSCCON 000FD3  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 7F8A  
       MSdelay@prmTiempo 0001            ___rparam_used 000001           __pcstackCOMRAM 0001  
                _MSdelay 7FB6                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F8A                  __ramtop 0800                  __ptext0 7F90  
                __ptext1 7FB6     end_of_initialization 7F8A                _TRISEbits 000F96  
    start_initialization 7F8A                 ?_MSdelay 0001         __size_of_MSdelay 004A  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0026  
               isa$xinst 000000      MSdelay@varContador1 0003      MSdelay@varContador2 0005  
