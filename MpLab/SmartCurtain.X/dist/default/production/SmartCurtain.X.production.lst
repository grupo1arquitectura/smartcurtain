

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 10 17:00:35 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  007749                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for main_rtc@F3525
    78  007749  53                 	db	83
    79  00774A  4D                 	db	77
    80  00774B  54                 	db	84
    81  00774C  57                 	db	87
    82  00774D  74                 	db	116
    83  00774E  46                 	db	70
    84  00774F  73                 	db	115
    85                           
    86                           ;initializer for _password
    87  007750  32                 	db	50
    88  007751  30                 	db	48
    89  007752  32                 	db	50
    90  007753  31                 	db	49
    91  007754  00                 	db	0
    92                           
    93                           ;initializer for _varOpcion
    94  007755  31                 	db	49
    95                           
    96                           	psect	idataBANK0
    97  00773D                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _keypad
   101  00773D  37                 	db	55
   102  00773E  38                 	db	56
   103  00773F  39                 	db	57
   104  007740  34                 	db	52
   105  007741  35                 	db	53
   106  007742  36                 	db	54
   107  007743  31                 	db	49
   108  007744  32                 	db	50
   109  007745  33                 	db	51
   110  007746  20                 	db	32
   111  007747  30                 	db	48
   112  007748  3D                 	db	61
   113                           
   114                           	psect	mediumconst
   115  007E7C                     __pmediumconst:
   116                           	callstack 0
   117  007E7C  00                 	db	0
   118  007E7D                     Keypad_Key_Press@F3196:
   119                           	callstack 0
   120  007E7D  31                 	db	49
   121  007E7E  32                 	db	50
   122  007E7F  33                 	db	51
   123  007E80  34                 	db	52
   124  007E81  35                 	db	53
   125  007E82  36                 	db	54
   126  007E83  37                 	db	55
   127  007E84  38                 	db	56
   128  007E85  39                 	db	57
   129  007E86  0D                 	db	13
   130  007E87  30                 	db	48
   131  007E88  00                 	db	0
   132  007E89  00                 	db	0
   133  007E8A  00                 	db	0
   134  007E8B  00                 	db	0
   135  007E8C  00                 	db	0
   136  007E8D  00                 	db	0
   137  007E8E                     __end_ofKeypad_Key_Press@F3196:
   138                           	callstack 0
   139  0000                     _RCREG	set	4014
   140  0000                     _TXREG	set	4013
   141  0000                     _RCSTA	set	4011
   142  0000                     _TXSTA	set	4012
   143  0000                     _SPBRG	set	4015
   144  0000                     _PORTD	set	3971
   145  0000                     _LATD	set	3980
   146  0000                     _TRISD	set	3989
   147  0000                     _PORTB	set	3969
   148  0000                     _PORTBbits	set	3969
   149  0000                     _OSCCON	set	4051
   150  0000                     _TRISA	set	3986
   151  0000                     _PORTA	set	3968
   152  0000                     _PORTAbits	set	3968
   153  0000                     _LATB	set	3978
   154  0000                     _TRISB	set	3987
   155  0000                     _PORTEbits	set	3972
   156  0000                     _RCIF	set	31989
   157  0000                     _TXIF	set	31988
   158  0000                     _TRISC7	set	31911
   159  0000                     _TRISC6	set	31910
   160  0000                     _RBPU	set	32655
   161  0000                     _LATB3	set	31827
   162  0000                     _LATB2	set	31826
   163  007E8E                     STR_12:
   164  007E8E  53                 	db	83	;'S'
   165  007E8F  65                 	db	101	;'e'
   166  007E90  6C                 	db	108	;'l'
   167  007E91  65                 	db	101	;'e'
   168  007E92  63                 	db	99	;'c'
   169  007E93  69                 	db	105	;'i'
   170  007E94  6F                 	db	111	;'o'
   171  007E95  6E                 	db	110	;'n'
   172  007E96  65                 	db	101	;'e'
   173  007E97  20                 	db	32
   174  007E98  6F                 	db	111	;'o'
   175  007E99  70                 	db	112	;'p'
   176  007E9A  63                 	db	99	;'c'
   177  007E9B  69                 	db	105	;'i'
   178  007E9C  6F                 	db	111	;'o'
   179  007E9D  6E                 	db	110	;'n'
   180  007E9E  3A                 	db	58	;':'
   181  007E9F  20                 	db	32
   182  007EA0  00                 	db	0
   183  007EA1                     STR_19:
   184  007EA1  41                 	db	65	;'A'
   185  007EA2  62                 	db	98	;'b'
   186  007EA3  69                 	db	105	;'i'
   187  007EA4  65                 	db	101	;'e'
   188  007EA5  72                 	db	114	;'r'
   189  007EA6  74                 	db	116	;'t'
   190  007EA7  61                 	db	97	;'a'
   191  007EA8  20                 	db	32
   192  007EA9  20                 	db	32
   193  007EAA  20                 	db	32
   194  007EAB  20                 	db	32
   195  007EAC  20                 	db	32
   196  007EAD  20                 	db	32
   197  007EAE  20                 	db	32
   198  007EAF  20                 	db	32
   199  007EB0  20                 	db	32
   200  007EB1  20                 	db	32
   201  007EB2  00                 	db	0
   202  007EB3                     STR_14:
   203  007EB3  32                 	db	50	;'2'
   204  007EB4  2E                 	db	46
   205  007EB5  41                 	db	65	;'A'
   206  007EB6  70                 	db	112	;'p'
   207  007EB7  65                 	db	101	;'e'
   208  007EB8  72                 	db	114	;'r'
   209  007EB9  74                 	db	116	;'t'
   210  007EBA  75                 	db	117	;'u'
   211  007EBB  72                 	db	114	;'r'
   212  007EBC  61                 	db	97	;'a'
   213  007EBD  20                 	db	32
   214  007EBE  20                 	db	32
   215  007EBF  20                 	db	32
   216  007EC0  20                 	db	32
   217  007EC1  20                 	db	32
   218  007EC2  20                 	db	32
   219  007EC3  20                 	db	32
   220  007EC4  00                 	db	0
   221  007EC5                     STR_13:
   222  007EC5  31                 	db	49	;'1'
   223  007EC6  2E                 	db	46
   224  007EC7  44                 	db	68	;'D'
   225  007EC8  65                 	db	101	;'e'
   226  007EC9  73                 	db	115	;'s'
   227  007ECA  70                 	db	112	;'p'
   228  007ECB  65                 	db	101	;'e'
   229  007ECC  72                 	db	114	;'r'
   230  007ECD  74                 	db	116	;'t'
   231  007ECE  61                 	db	97	;'a'
   232  007ECF  64                 	db	100	;'d'
   233  007ED0  6F                 	db	111	;'o'
   234  007ED1  72                 	db	114	;'r'
   235  007ED2  20                 	db	32
   236  007ED3  20                 	db	32
   237  007ED4  20                 	db	32
   238  007ED5  20                 	db	32
   239  007ED6  00                 	db	0
   240  007ED7                     STR_15:
   241  007ED7  33                 	db	51	;'3'
   242  007ED8  2E                 	db	46
   243  007ED9  44                 	db	68	;'D'
   244  007EDA  65                 	db	101	;'e'
   245  007EDB  73                 	db	115	;'s'
   246  007EDC  70                 	db	112	;'p'
   247  007EDD  65                 	db	101	;'e'
   248  007EDE  72                 	db	114	;'r'
   249  007EDF  74                 	db	116	;'t'
   250  007EE0  61                 	db	97	;'a'
   251  007EE1  64                 	db	100	;'d'
   252  007EE2  6F                 	db	111	;'o'
   253  007EE3  72                 	db	114	;'r'
   254  007EE4  20                 	db	32
   255  007EE5  20                 	db	32
   256  007EE6  20                 	db	32
   257  007EE7  20                 	db	32
   258  007EE8  00                 	db	0
   259  007EE9                     STR_18:
   260  007EE9  41                 	db	65	;'A'
   261  007EEA  70                 	db	112	;'p'
   262  007EEB  65                 	db	101	;'e'
   263  007EEC  72                 	db	114	;'r'
   264  007EED  74                 	db	116	;'t'
   265  007EEE  75                 	db	117	;'u'
   266  007EEF  72                 	db	114	;'r'
   267  007EF0  61                 	db	97	;'a'
   268  007EF1  20                 	db	32
   269  007EF2  20                 	db	32
   270  007EF3  20                 	db	32
   271  007EF4  20                 	db	32
   272  007EF5  20                 	db	32
   273  007EF6  20                 	db	32
   274  007EF7  20                 	db	32
   275  007EF8  20                 	db	32
   276  007EF9  00                 	db	0
   277  007EFA                     STR_22:
   278  007EFA  43                 	db	67	;'C'
   279  007EFB  6F                 	db	111	;'o'
   280  007EFC  72                 	db	114	;'r'
   281  007EFD  74                 	db	116	;'t'
   282  007EFE  69                 	db	105	;'i'
   283  007EFF  6E                 	db	110	;'n'
   284  007F00  61                 	db	97	;'a'
   285  007F01  20                 	db	32
   286  007F02  63                 	db	99	;'c'
   287  007F03  65                 	db	101	;'e'
   288  007F04  72                 	db	114	;'r'
   289  007F05  72                 	db	114	;'r'
   290  007F06  61                 	db	97	;'a'
   291  007F07  64                 	db	100	;'d'
   292  007F08  61                 	db	97	;'a'
   293  007F09  20                 	db	32
   294  007F0A  00                 	db	0
   295  007F0B                     STR_17:
   296  007F0B  43                 	db	67	;'C'
   297  007F0C  6F                 	db	111	;'o'
   298  007F0D  72                 	db	114	;'r'
   299  007F0E  74                 	db	116	;'t'
   300  007F0F  69                 	db	105	;'i'
   301  007F10  6E                 	db	110	;'n'
   302  007F11  61                 	db	97	;'a'
   303  007F12  20                 	db	32
   304  007F13  61                 	db	97	;'a'
   305  007F14  62                 	db	98	;'b'
   306  007F15  69                 	db	105	;'i'
   307  007F16  65                 	db	101	;'e'
   308  007F17  72                 	db	114	;'r'
   309  007F18  74                 	db	116	;'t'
   310  007F19  61                 	db	97	;'a'
   311  007F1A  20                 	db	32
   312  007F1B  00                 	db	0
   313  007F1C                     STR_10:
   314  007F1C  32                 	db	50	;'2'
   315  007F1D  2E                 	db	46
   316  007F1E  20                 	db	32
   317  007F1F  54                 	db	84	;'T'
   318  007F20  65                 	db	101	;'e'
   319  007F21  63                 	db	99	;'c'
   320  007F22  6C                 	db	108	;'l'
   321  007F23  61                 	db	97	;'a'
   322  007F24  64                 	db	100	;'d'
   323  007F25  6F                 	db	111	;'o'
   324  007F26  20                 	db	32
   325  007F27  20                 	db	32
   326  007F28  20                 	db	32
   327  007F29  20                 	db	32
   328  007F2A  20                 	db	32
   329  007F2B  20                 	db	32
   330  007F2C  00                 	db	0
   331  007F2D                     STR_9:
   332  007F2D  31                 	db	49	;'1'
   333  007F2E  2E                 	db	46
   334  007F2F  20                 	db	32
   335  007F30  42                 	db	66	;'B'
   336  007F31  6C                 	db	108	;'l'
   337  007F32  75                 	db	117	;'u'
   338  007F33  65                 	db	101	;'e'
   339  007F34  74                 	db	116	;'t'
   340  007F35  6F                 	db	111	;'o'
   341  007F36  6F                 	db	111	;'o'
   342  007F37  74                 	db	116	;'t'
   343  007F38  68                 	db	104	;'h'
   344  007F39  20                 	db	32
   345  007F3A  20                 	db	32
   346  007F3B  20                 	db	32
   347  007F3C  20                 	db	32
   348  007F3D  00                 	db	0
   349  007F3E                     STR_11:
   350  007F3E  42                 	db	66	;'B'
   351  007F3F  69                 	db	105	;'i'
   352  007F40  65                 	db	101	;'e'
   353  007F41  6E                 	db	110	;'n'
   354  007F42  76                 	db	118	;'v'
   355  007F43  65                 	db	101	;'e'
   356  007F44  6E                 	db	110	;'n'
   357  007F45  69                 	db	105	;'i'
   358  007F46  64                 	db	100	;'d'
   359  007F47  6F                 	db	111	;'o'
   360  007F48  20                 	db	32
   361  007F49  20                 	db	32
   362  007F4A  20                 	db	32
   363  007F4B  20                 	db	32
   364  007F4C  20                 	db	32
   365  007F4D  00                 	db	0
   366  007F4E                     STR_7:
   367  007F4E  31                 	db	49	;'1'
   368  007F4F  2E                 	db	46
   369  007F50  20                 	db	32
   370  007F51  53                 	db	83	;'S'
   371  007F52  69                 	db	105	;'i'
   372  007F53  20                 	db	32
   373  007F54  20                 	db	32
   374  007F55  20                 	db	32
   375  007F56  20                 	db	32
   376  007F57  20                 	db	32
   377  007F58  20                 	db	32
   378  007F59  20                 	db	32
   379  007F5A  20                 	db	32
   380  007F5B  20                 	db	32
   381  007F5C  20                 	db	32
   382  007F5D  00                 	db	0
   383  007F5E                     STR_8:
   384  007F5E  32                 	db	50	;'2'
   385  007F5F  2E                 	db	46
   386  007F60  20                 	db	32
   387  007F61  4E                 	db	78	;'N'
   388  007F62  6F                 	db	111	;'o'
   389  007F63  20                 	db	32
   390  007F64  20                 	db	32
   391  007F65  20                 	db	32
   392  007F66  20                 	db	32
   393  007F67  20                 	db	32
   394  007F68  20                 	db	32
   395  007F69  20                 	db	32
   396  007F6A  20                 	db	32
   397  007F6B  20                 	db	32
   398  007F6C  20                 	db	32
   399  007F6D  00                 	db	0
   400  007F6E                     STR_1:
   401  007F6E  42                 	db	66	;'B'
   402  007F6F  6C                 	db	108	;'l'
   403  007F70  75                 	db	117	;'u'
   404  007F71  65                 	db	101	;'e'
   405  007F72  74                 	db	116	;'t'
   406  007F73  6F                 	db	111	;'o'
   407  007F74  6F                 	db	111	;'o'
   408  007F75  74                 	db	116	;'t'
   409  007F76  68                 	db	104	;'h'
   410  007F77  20                 	db	32
   411  007F78  4F                 	db	79	;'O'
   412  007F79  4E                 	db	78	;'N'
   413  007F7A  20                 	db	32
   414  007F7B  20                 	db	32
   415  007F7C  20                 	db	32
   416  007F7D  00                 	db	0
   417  007F7E                     STR_6:
   418  007F7E  55                 	db	85	;'U'
   419  007F7F  73                 	db	115	;'s'
   420  007F80  61                 	db	97	;'a'
   421  007F81  72                 	db	114	;'r'
   422  007F82  20                 	db	32
   423  007F83  74                 	db	116	;'t'
   424  007F84  65                 	db	101	;'e'
   425  007F85  63                 	db	99	;'c'
   426  007F86  6C                 	db	108	;'l'
   427  007F87  61                 	db	97	;'a'
   428  007F88  64                 	db	100	;'d'
   429  007F89  6F                 	db	111	;'o'
   430  007F8A  3F                 	db	63	;'?'
   431  007F8B  20                 	db	32
   432  007F8C  20                 	db	32
   433  007F8D  00                 	db	0
   434  007F8E                     STR_4:
   435  007F8E  72                 	db	114	;'r'
   436  007F8F  65                 	db	101	;'e'
   437  007F90  63                 	db	99	;'c'
   438  007F91  69                 	db	105	;'i'
   439  007F92  62                 	db	98	;'b'
   440  007F93  69                 	db	105	;'i'
   441  007F94  65                 	db	101	;'e'
   442  007F95  72                 	db	114	;'r'
   443  007F96  6F                 	db	111	;'o'
   444  007F97  6E                 	db	110	;'n'
   445  007F98  20                 	db	32
   446  007F99  20                 	db	32
   447  007F9A  20                 	db	32
   448  007F9B  00                 	db	0
   449  007F9C                     STR_5:
   450  007F9C  6C                 	db	108	;'l'
   451  007F9D  6F                 	db	111	;'o'
   452  007F9E  73                 	db	115	;'s'
   453  007F9F  20                 	db	32
   454  007FA0  64                 	db	100	;'d'
   455  007FA1  61                 	db	97	;'a'
   456  007FA2  74                 	db	116	;'t'
   457  007FA3  6F                 	db	111	;'o'
   458  007FA4  73                 	db	115	;'s'
   459  007FA5  20                 	db	32
   460  007FA6  20                 	db	32
   461  007FA7  20                 	db	32
   462  007FA8  00                 	db	0
   463  007FA9  50                 	db	80	;'P'
   464  007FAA  72                 	db	114	;'r'
   465  007FAB  65                 	db	101	;'e'
   466  007FAC  73                 	db	115	;'s'
   467  007FAD  73                 	db	115	;'s'
   468  007FAE  20                 	db	32
   469  007FAF  61                 	db	97	;'a'
   470  007FB0  20                 	db	32
   471  007FB1  4B                 	db	75	;'K'
   472  007FB2  65                 	db	101	;'e'
   473  007FB3  79                 	db	121	;'y'
   474  007FB4  00                 	db	0
   475  007FB5                     STR_2:
   476  007FB5  45                 	db	69	;'E'
   477  007FB6  72                 	db	114	;'r'
   478  007FB7  72                 	db	114	;'r'
   479  007FB8  6F                 	db	111	;'o'
   480  007FB9  72                 	db	114	;'r'
   481  007FBA  2E                 	db	46
   482  007FBB  2E                 	db	46
   483  007FBC  2E                 	db	46
   484  007FBD  20                 	db	32
   485  007FBE  20                 	db	32
   486  007FBF  00                 	db	0
   487  007FC0                     STR_3:
   488  007FC0  4E                 	db	78	;'N'
   489  007FC1  6F                 	db	111	;'o'
   490  007FC2  20                 	db	32
   491  007FC3  73                 	db	115	;'s'
   492  007FC4  65                 	db	101	;'e'
   493  007FC5  20                 	db	32
   494  007FC6  20                 	db	32
   495  007FC7  20                 	db	32
   496  007FC8  00                 	db	0
   497  007FC9                     STR_31:
   498  007FC9  43                 	db	67	;'C'
   499  007FCA  61                 	db	97	;'a'
   500  007FCB  6C                 	db	108	;'l'
   501  007FCC  20                 	db	32
   502  007FCD  25                 	db	37
   503  007FCE  78                 	db	120	;'x'
   504  007FCF  2D                 	db	45
   505  007FD0  00                 	db	0
   506  007FD1                     STR_27:
   507  007FD1  54                 	db	84	;'T'
   508  007FD2  69                 	db	105	;'i'
   509  007FD3  6D                 	db	109	;'m'
   510  007FD4  3A                 	db	58	;':'
   511  007FD5  25                 	db	37
   512  007FD6  78                 	db	120	;'x'
   513  007FD7  3A                 	db	58	;':'
   514  007FD8  00                 	db	0
   515  007FD9                     STR_25:
   516  007FD9  25                 	db	37
   517  007FDA  78                 	db	120	;'x'
   518  007FDB  20                 	db	32
   519  007FDC  00                 	db	0
   520  007FDD  57                 	db	87	;'W'
   521  007FDE  65                 	db	101	;'e'
   522  007FDF  64                 	db	100	;'d'
   523  007FE0  00                 	db	0
   524  007FE1  54                 	db	84	;'T'
   525  007FE2  75                 	db	117	;'u'
   526  007FE3  65                 	db	101	;'e'
   527  007FE4  00                 	db	0
   528  007FE5  46                 	db	70	;'F'
   529  007FE6  72                 	db	114	;'r'
   530  007FE7  69                 	db	105	;'i'
   531  007FE8  00                 	db	0
   532  007FE9  4D                 	db	77	;'M'
   533  007FEA  6F                 	db	111	;'o'
   534  007FEB  6E                 	db	110	;'n'
   535  007FEC  00                 	db	0
   536  007FED  53                 	db	83	;'S'
   537  007FEE  75                 	db	117	;'u'
   538  007FEF  6E                 	db	110	;'n'
   539  007FF0  00                 	db	0
   540  007FF1  53                 	db	83	;'S'
   541  007FF2  61                 	db	97	;'a'
   542  007FF3  74                 	db	116	;'t'
   543  007FF4  00                 	db	0
   544  007FF5  54                 	db	84	;'T'
   545  007FF6  68                 	db	104	;'h'
   546  007FF7  75                 	db	117	;'u'
   547  007FF8  00                 	db	0
   548  007FF9  41                 	db	65	;'A'
   549  007FFA  4D                 	db	77	;'M'
   550  007FFB  00                 	db	0
   551  007FFC  50                 	db	80	;'P'
   552  007FFD  4D                 	db	77	;'M'
   553  007FFE  00                 	db	0
   554  007FFF  00                 	db	0	; dummy byte at the end
   555  0000                     
   556                           ; #config settings
   557                           
   558                           	psect	cinit
   559  0078C4                     __pcinit:
   560                           	callstack 0
   561  0078C4                     start_initialization:
   562                           	callstack 0
   563  0078C4                     __initialization:
   564                           	callstack 0
   565                           
   566                           ; Initialize objects allocated to BANK0 (12 bytes)
   567                           ; load TBLPTR registers with __pidataBANK0
   568  0078C4  0E3D               	movlw	low __pidataBANK0
   569  0078C6  6EF6               	movwf	tblptrl,c
   570  0078C8  0E77               	movlw	high __pidataBANK0
   571  0078CA  6EF7               	movwf	tblptrh,c
   572  0078CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   573  0078CE  6EF8               	movwf	tblptru,c
   574  0078D0  EE00  F060         	lfsr	0,__pdataBANK0
   575  0078D4  EE10 F00C          	lfsr	1,12
   576  0078D8                     copy_data0:
   577  0078D8  0009               	tblrd		*+
   578  0078DA  CFF5 FFEE          	movff	tablat,postinc0
   579  0078DE  50E5               	movf	postdec1,w,c
   580  0078E0  50E1               	movf	fsr1l,w,c
   581  0078E2  E1FA               	bnz	copy_data0
   582                           
   583                           ; Initialize objects allocated to COMRAM (13 bytes)
   584                           ; load TBLPTR registers with __pidataCOMRAM
   585  0078E4  0E49               	movlw	low __pidataCOMRAM
   586  0078E6  6EF6               	movwf	tblptrl,c
   587  0078E8  0E77               	movlw	high __pidataCOMRAM
   588  0078EA  6EF7               	movwf	tblptrh,c
   589  0078EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   590  0078EE  6EF8               	movwf	tblptru,c
   591  0078F0  EE00  F048         	lfsr	0,__pdataCOMRAM
   592  0078F4  EE10 F00D          	lfsr	1,13
   593  0078F8                     copy_data1:
   594  0078F8  0009               	tblrd		*+
   595  0078FA  CFF5 FFEE          	movff	tablat,postinc0
   596  0078FE  50E5               	movf	postdec1,w,c
   597  007900  50E1               	movf	fsr1l,w,c
   598  007902  E1FA               	bnz	copy_data1
   599                           
   600                           ; Clear objects allocated to COMRAM (48 bytes)
   601  007904  EE00  F001         	lfsr	0,__pbssCOMRAM
   602  007908  0E30               	movlw	48
   603  00790A                     clear_0:
   604  00790A  6AEE               	clrf	postinc0,c
   605  00790C  06E8               	decf	wreg,f,c
   606  00790E  E1FD               	bnz	clear_0
   607  007910                     end_of_initialization:
   608                           	callstack 0
   609  007910                     __end_of__initialization:
   610                           	callstack 0
   611  007910  0E00               	movlw	low (__Lmediumconst shr (0+16))
   612  007912  6EF8               	movwf	tblptru,c
   613  007914  0100               	movlb	0
   614  007916  EF95  F03B         	goto	_main	;jump to C main() function
   615                           
   616                           	psect	bssCOMRAM
   617  000001                     __pbssCOMRAM:
   618                           	callstack 0
   619  000001                     _pass_user:
   620                           	callstack 0
   621  000001                     	ds	5
   622  000006                     _Year:
   623                           	callstack 0
   624  000006                     	ds	2
   625  000008                     _Month:
   626                           	callstack 0
   627  000008                     	ds	2
   628  00000A                     _Date:
   629                           	callstack 0
   630  00000A                     	ds	2
   631  00000C                     _Day:
   632                           	callstack 0
   633  00000C                     	ds	2
   634  00000E                     _hour:
   635                           	callstack 0
   636  00000E                     	ds	2
   637  000010                     _min:
   638                           	callstack 0
   639  000010                     	ds	2
   640  000012                     _sec:
   641                           	callstack 0
   642  000012                     	ds	2
   643  000014                     _varAbierta:
   644                           	callstack 0
   645  000014                     	ds	2
   646  000016                     _varFechaD:
   647                           	callstack 0
   648  000016                     	ds	2
   649  000018                     _varMinutosD:
   650                           	callstack 0
   651  000018                     	ds	2
   652  00001A                     _varHorasD:
   653                           	callstack 0
   654  00001A                     	ds	2
   655  00001C                     _varTemp2:
   656                           	callstack 0
   657  00001C                     	ds	2
   658  00001E                     _varTemp1:
   659                           	callstack 0
   660  00001E                     	ds	2
   661  000020                     _varFecha:
   662                           	callstack 0
   663  000020                     	ds	2
   664  000022                     _varMinutos:
   665                           	callstack 0
   666  000022                     	ds	2
   667  000024                     _varHoras:
   668                           	callstack 0
   669  000024                     	ds	2
   670  000026                     _varFechaAlarma:
   671                           	callstack 0
   672  000026                     	ds	2
   673  000028                     _varMinutosAlarma:
   674                           	callstack 0
   675  000028                     	ds	2
   676  00002A                     _varHoraAlarma:
   677                           	callstack 0
   678  00002A                     	ds	2
   679  00002C                     _idx:
   680                           	callstack 0
   681  00002C                     	ds	1
   682  00002D                     _temp_col:
   683                           	callstack 0
   684  00002D                     	ds	1
   685  00002E                     _rowloc:
   686                           	callstack 0
   687  00002E                     	ds	1
   688  00002F                     _col_loc:
   689                           	callstack 0
   690  00002F                     	ds	1
   691  000030                     _varAux:
   692                           	callstack 0
   693  000030                     	ds	1
   694                           
   695                           	psect	dataCOMRAM
   696  000048                     __pdataCOMRAM:
   697                           	callstack 0
   698  000048                     main_rtc@F3525:
   699                           	callstack 0
   700  000048                     	ds	7
   701  00004F                     _password:
   702                           	callstack 0
   703  00004F                     	ds	5
   704  000054                     _varOpcion:
   705                           	callstack 0
   706  000054                     	ds	1
   707                           
   708                           	psect	dataBANK0
   709  000060                     __pdataBANK0:
   710                           	callstack 0
   711  000060                     _keypad:
   712                           	callstack 0
   713  000060                     	ds	12
   714                           
   715                           	psect	cstackCOMRAM
   716  000031                     __pcstackCOMRAM:
   717                           	callstack 0
   718  000031                     ??_LCD_Command:
   719  000031                     ??_LCD_Char:
   720  000031                     lederror@prmEstado:
   721                           	callstack 0
   722  000031                     ledActivador@prmEstado:
   723                           	callstack 0
   724  000031                     Keypad_Key_Press@keypad_deco:
   725                           	callstack 0
   726                           
   727                           ; 17 bytes @ 0x0
   728  000031                     	ds	1
   729  000032                     LCD_Command@cmd:
   730                           	callstack 0
   731  000032                     LCD_Char@dat:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x1
   735  000032                     	ds	1
   736  000033                     ??_ledActivador:
   737  000033                     ??_LCD_Init:
   738  000033                     LCD_String@msg:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x2
   742  000033                     	ds	2
   743  000035                     LCD_String_xy@pos:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x4
   747  000035                     	ds	1
   748  000036                     LCD_String_xy@msg:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x5
   752  000036                     	ds	2
   753  000038                     LCD_String_xy@row:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x7
   757  000038                     	ds	1
   758  000039                     LCD_String_xy@location:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x8
   762  000039                     	ds	1
   763  00003A                     ??_recuperarHoraBluetooth:
   764                           
   765                           ; 1 bytes @ 0x9
   766  00003A                     	ds	1
   767  00003B                     ??_despertador:
   768                           
   769                           ; 1 bytes @ 0xA
   770  00003B                     	ds	7
   771  000042                     Keypad_Key_Press@tec:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x11
   775  000042                     	ds	2
   776  000044                     Keypad_Key_Press@fila:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x13
   780  000044                     	ds	2
   781  000046                     ??_menu:
   782                           
   783                           ; 1 bytes @ 0x15
   784  000046                     	ds	2
   785  000048                     
   786                           ; 1 bytes @ 0x17
   787 ;;
   788 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   789 ;;
   790 ;; *************** function _main *****************
   791 ;; Defined at:
   792 ;;		line 21 in file "main.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         0       0       0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels required when called: 6
   812 ;; This function calls:
   813 ;;		_menu
   814 ;; This function is called by:
   815 ;;		Startup code after reset
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text0
   820  00772A                     __ptext0:
   821                           	callstack 0
   822  00772A                     _main:
   823                           	callstack 25
   824  00772A                     
   825                           ;main.c: 22:     menu();
   826  00772A  EC1C  F03E         	call	_menu	;wreg free
   827  00772E  EF00  F000         	goto	start
   828  007732                     __end_of_main:
   829                           	callstack 0
   830                           
   831 ;; *************** function _menu *****************
   832 ;; Defined at:
   833 ;;		line 25 in file "clsMenu.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   847 ;;      Params:         0       0       0       0       0       0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0
   849 ;;      Temps:          2       0       0       0       0       0       0       0       0
   850 ;;      Totals:         2       0       0       0       0       0       0       0       0
   851 ;;Total ram usage:        2 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 5
   854 ;; This function calls:
   855 ;;		_Keypad_Key_Press
   856 ;;		_LCD_Clear
   857 ;;		_LCD_Init
   858 ;;		_LCD_String_xy
   859 ;;		_despertador
   860 ;;		_ledencendido
   861 ;;		_motorApertura
   862 ;;		_motorCierre
   863 ;;		_motorStop
   864 ;;		_motor_ini
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text1
   871  007C38                     __ptext1:
   872                           	callstack 0
   873  007C38                     _menu:
   874                           	callstack 25
   875  007C38                     
   876                           ;clsMenu.c: 27:      ledencendido();
   877  007C38  EC88  F03B         	call	_ledencendido	;wreg free
   878  007C3C                     
   879                           ;clsMenu.c: 28:      LCD_Init();
   880  007C3C  ECD8  F03B         	call	_LCD_Init	;wreg free
   881  007C40                     
   882                           ;clsMenu.c: 29:      motor_ini();
   883  007C40  EC99  F03B         	call	_motor_ini	;wreg free
   884  007C44                     
   885                           ;clsMenu.c: 30:      despertador();
   886  007C44  ECBC  F03C         	call	_despertador	;wreg free
   887  007C48                     l1744:
   888                           
   889                           ;clsMenu.c: 33:     LCD_String_xy(0,0,"Bienvenido     ");
   890  007C48  0E00               	movlw	0
   891  007C4A  6E35               	movwf	LCD_String_xy@pos^0,c
   892  007C4C  0E3E               	movlw	low STR_11
   893  007C4E  6E36               	movwf	LCD_String_xy@msg^0,c
   894  007C50  0E7F               	movlw	high STR_11
   895  007C52  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
   896  007C54  0E00               	movlw	0
   897  007C56  ECF2  F03B         	call	_LCD_String_xy
   898  007C5A                     
   899                           ;clsMenu.c: 34:     _delay((unsigned long)((200)*(8000000/4000.0)));
   900  007C5A  0E03               	movlw	3
   901  007C5C  6E47               	movwf	(??_menu+1)^0,c
   902  007C5E  0E08               	movlw	8
   903  007C60  6E46               	movwf	??_menu^0,c
   904  007C62  0E77               	movlw	119
   905  007C64                     u877:
   906  007C64  2EE8               	decfsz	wreg,f,c
   907  007C66  D7FE               	bra	u877
   908  007C68  2E46               	decfsz	??_menu^0,f,c
   909  007C6A  D7FC               	bra	u877
   910  007C6C  2E47               	decfsz	(??_menu+1)^0,f,c
   911  007C6E  D7FA               	bra	u877
   912  007C70  F000               	nop	
   913  007C72                     
   914                           ;clsMenu.c: 35:     LCD_String_xy(0,0,"Selecione opcion: ");
   915  007C72  0E00               	movlw	0
   916  007C74  6E35               	movwf	LCD_String_xy@pos^0,c
   917  007C76  0E8E               	movlw	low STR_12
   918  007C78  6E36               	movwf	LCD_String_xy@msg^0,c
   919  007C7A  0E7E               	movlw	high STR_12
   920  007C7C  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
   921  007C7E  0E00               	movlw	0
   922  007C80  ECF2  F03B         	call	_LCD_String_xy
   923  007C84                     
   924                           ;clsMenu.c: 36:     _delay((unsigned long)((200)*(8000000/4000.0)));
   925  007C84  0E03               	movlw	3
   926  007C86  6E47               	movwf	(??_menu+1)^0,c
   927  007C88  0E08               	movlw	8
   928  007C8A  6E46               	movwf	??_menu^0,c
   929  007C8C  0E77               	movlw	119
   930  007C8E                     u887:
   931  007C8E  2EE8               	decfsz	wreg,f,c
   932  007C90  D7FE               	bra	u887
   933  007C92  2E46               	decfsz	??_menu^0,f,c
   934  007C94  D7FC               	bra	u887
   935  007C96  2E47               	decfsz	(??_menu+1)^0,f,c
   936  007C98  D7FA               	bra	u887
   937  007C9A  F000               	nop	
   938  007C9C                     
   939                           ;clsMenu.c: 37:      LCD_String_xy(0,0,"1.Despertador    ");
   940  007C9C  0E00               	movlw	0
   941  007C9E  6E35               	movwf	LCD_String_xy@pos^0,c
   942  007CA0  0EC5               	movlw	low STR_13
   943  007CA2  6E36               	movwf	LCD_String_xy@msg^0,c
   944  007CA4  0E7E               	movlw	high STR_13
   945  007CA6  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
   946  007CA8  0E00               	movlw	0
   947  007CAA  ECF2  F03B         	call	_LCD_String_xy
   948  007CAE                     
   949                           ;clsMenu.c: 38:     _delay((unsigned long)((200)*(8000000/4000.0)));
   950  007CAE  0E03               	movlw	3
   951  007CB0  6E47               	movwf	(??_menu+1)^0,c
   952  007CB2  0E08               	movlw	8
   953  007CB4  6E46               	movwf	??_menu^0,c
   954  007CB6  0E77               	movlw	119
   955  007CB8                     u897:
   956  007CB8  2EE8               	decfsz	wreg,f,c
   957  007CBA  D7FE               	bra	u897
   958  007CBC  2E46               	decfsz	??_menu^0,f,c
   959  007CBE  D7FC               	bra	u897
   960  007CC0  2E47               	decfsz	(??_menu+1)^0,f,c
   961  007CC2  D7FA               	bra	u897
   962  007CC4  F000               	nop	
   963  007CC6                     
   964                           ;clsMenu.c: 39:      LCD_String_xy(0,0,"2.Apertura       ");
   965  007CC6  0E00               	movlw	0
   966  007CC8  6E35               	movwf	LCD_String_xy@pos^0,c
   967  007CCA  0EB3               	movlw	low STR_14
   968  007CCC  6E36               	movwf	LCD_String_xy@msg^0,c
   969  007CCE  0E7E               	movlw	high STR_14
   970  007CD0  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
   971  007CD2  0E00               	movlw	0
   972  007CD4  ECF2  F03B         	call	_LCD_String_xy
   973  007CD8                     
   974                           ;clsMenu.c: 40:     _delay((unsigned long)((200)*(8000000/4000.0)));
   975  007CD8  0E03               	movlw	3
   976  007CDA  6E47               	movwf	(??_menu+1)^0,c
   977  007CDC  0E08               	movlw	8
   978  007CDE  6E46               	movwf	??_menu^0,c
   979  007CE0  0E77               	movlw	119
   980  007CE2                     u907:
   981  007CE2  2EE8               	decfsz	wreg,f,c
   982  007CE4  D7FE               	bra	u907
   983  007CE6  2E46               	decfsz	??_menu^0,f,c
   984  007CE8  D7FC               	bra	u907
   985  007CEA  2E47               	decfsz	(??_menu+1)^0,f,c
   986  007CEC  D7FA               	bra	u907
   987  007CEE  F000               	nop	
   988  007CF0                     
   989                           ;clsMenu.c: 41:      LCD_String_xy(0,0,"3.Despertador    ");
   990  007CF0  0E00               	movlw	0
   991  007CF2  6E35               	movwf	LCD_String_xy@pos^0,c
   992  007CF4  0ED7               	movlw	low STR_15
   993  007CF6  6E36               	movwf	LCD_String_xy@msg^0,c
   994  007CF8  0E7E               	movlw	high STR_15
   995  007CFA  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
   996  007CFC  0E00               	movlw	0
   997  007CFE  ECF2  F03B         	call	_LCD_String_xy
   998  007D02                     
   999                           ;clsMenu.c: 42:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1000  007D02  0E03               	movlw	3
  1001  007D04  6E47               	movwf	(??_menu+1)^0,c
  1002  007D06  0E08               	movlw	8
  1003  007D08  6E46               	movwf	??_menu^0,c
  1004  007D0A  0E77               	movlw	119
  1005  007D0C                     u917:
  1006  007D0C  2EE8               	decfsz	wreg,f,c
  1007  007D0E  D7FE               	bra	u917
  1008  007D10  2E46               	decfsz	??_menu^0,f,c
  1009  007D12  D7FC               	bra	u917
  1010  007D14  2E47               	decfsz	(??_menu+1)^0,f,c
  1011  007D16  D7FA               	bra	u917
  1012  007D18  F000               	nop	
  1013  007D1A                     
  1014                           ;clsMenu.c: 44:     varAux = Keypad_Key_Press();
  1015  007D1A  ECFD  F03C         	call	_Keypad_Key_Press	;wreg free
  1016  007D1E  6E30               	movwf	_varAux^0,c
  1017  007D20                     
  1018                           ;clsMenu.c: 45:     varAux = '2';
  1019  007D20  0E32               	movlw	50
  1020  007D22  6E30               	movwf	_varAux^0,c
  1021  007D24                     
  1022                           ;clsMenu.c: 54:      {;clsMenu.c: 55:          if(varAbierta == 1){
  1023  007D24  0414               	decf	_varAbierta^0,w,c
  1024  007D26  1015               	iorwf	(_varAbierta+1)^0,w,c
  1025  007D28  A4D8               	btfss	status,2,c
  1026  007D2A  EF99  F03E         	goto	u611
  1027  007D2E  EF9B  F03E         	goto	u610
  1028  007D32                     u611:
  1029  007D32  EFD8  F03E         	goto	l1796
  1030  007D36                     u610:
  1031  007D36                     
  1032                           ;clsMenu.c: 56:              LCD_String_xy(0,0,"Cortina abierta ");
  1033  007D36  0E00               	movlw	0
  1034  007D38  6E35               	movwf	LCD_String_xy@pos^0,c
  1035  007D3A  0E0B               	movlw	low STR_17
  1036  007D3C  6E36               	movwf	LCD_String_xy@msg^0,c
  1037  007D3E  0E7F               	movlw	high STR_17
  1038  007D40  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1039  007D42  0E00               	movlw	0
  1040  007D44  ECF2  F03B         	call	_LCD_String_xy
  1041                           
  1042                           ;clsMenu.c: 57:          }
  1043  007D48  EFE1  F03E         	goto	l1798
  1044  007D4C                     l1784:
  1045                           
  1046                           ;clsMenu.c: 61:             {;clsMenu.c: 62:                    LCD_String_xy(0,0,"Apert
      +                          ura        ");
  1047  007D4C  0E00               	movlw	0
  1048  007D4E  6E35               	movwf	LCD_String_xy@pos^0,c
  1049  007D50  0EE9               	movlw	low STR_18
  1050  007D52  6E36               	movwf	LCD_String_xy@msg^0,c
  1051  007D54  0E7E               	movlw	high STR_18
  1052  007D56  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1053  007D58  0E00               	movlw	0
  1054  007D5A  ECF2  F03B         	call	_LCD_String_xy
  1055  007D5E                     
  1056                           ;clsMenu.c: 63:                    _delay((unsigned long)((200)*(8000000/4000.0)));
  1057  007D5E  0E03               	movlw	3
  1058  007D60  6E47               	movwf	(??_menu+1)^0,c
  1059  007D62  0E08               	movlw	8
  1060  007D64  6E46               	movwf	??_menu^0,c
  1061  007D66  0E77               	movlw	119
  1062  007D68                     u927:
  1063  007D68  2EE8               	decfsz	wreg,f,c
  1064  007D6A  D7FE               	bra	u927
  1065  007D6C  2E46               	decfsz	??_menu^0,f,c
  1066  007D6E  D7FC               	bra	u927
  1067  007D70  2E47               	decfsz	(??_menu+1)^0,f,c
  1068  007D72  D7FA               	bra	u927
  1069  007D74  F000               	nop	
  1070  007D76                     
  1071                           ;clsMenu.c: 64:                    motorApertura();
  1072  007D76  EC8A  F03B         	call	_motorApertura	;wreg free
  1073  007D7A                     
  1074                           ;clsMenu.c: 65:                    _delay((unsigned long)((400)*(8000000/4000.0)));
  1075  007D7A  0E05               	movlw	5
  1076  007D7C  6E47               	movwf	(??_menu+1)^0,c
  1077  007D7E  0E0F               	movlw	15
  1078  007D80  6E46               	movwf	??_menu^0,c
  1079  007D82  0EF1               	movlw	241
  1080  007D84                     u937:
  1081  007D84  2EE8               	decfsz	wreg,f,c
  1082  007D86  D7FE               	bra	u937
  1083  007D88  2E46               	decfsz	??_menu^0,f,c
  1084  007D8A  D7FC               	bra	u937
  1085  007D8C  2E47               	decfsz	(??_menu+1)^0,f,c
  1086  007D8E  D7FA               	bra	u937
  1087  007D90  F000               	nop	
  1088  007D92                     
  1089                           ;clsMenu.c: 66:                    motorStop();
  1090  007D92  EC8E  F03B         	call	_motorStop	;wreg free
  1091                           
  1092                           ;clsMenu.c: 67:                    LCD_String_xy(0,0,"Abierta          ");
  1093  007D96  0E00               	movlw	0
  1094  007D98  6E35               	movwf	LCD_String_xy@pos^0,c
  1095  007D9A  0EA1               	movlw	low STR_19
  1096  007D9C  6E36               	movwf	LCD_String_xy@msg^0,c
  1097  007D9E  0E7E               	movlw	high STR_19
  1098  007DA0  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1099  007DA2  0E00               	movlw	0
  1100  007DA4  ECF2  F03B         	call	_LCD_String_xy
  1101  007DA8                     
  1102                           ;clsMenu.c: 68:                    varAbierta = 1;
  1103  007DA8  0E00               	movlw	0
  1104  007DAA  6E15               	movwf	(_varAbierta+1)^0,c
  1105  007DAC  0E01               	movlw	1
  1106  007DAE  6E14               	movwf	_varAbierta^0,c
  1107  007DB0                     l1796:
  1108                           
  1109                           ;clsMenu.c: 60:             while(varAbierta == 0)
  1110  007DB0  5014               	movf	_varAbierta^0,w,c
  1111  007DB2  1015               	iorwf	(_varAbierta+1)^0,w,c
  1112  007DB4  B4D8               	btfsc	status,2,c
  1113  007DB6  EFDF  F03E         	goto	u621
  1114  007DBA  EFE1  F03E         	goto	u620
  1115  007DBE                     u621:
  1116  007DBE  EFA6  F03E         	goto	l1784
  1117  007DC2                     u620:
  1118  007DC2                     l1798:
  1119                           
  1120                           ;clsMenu.c: 74:      if(varAux=='3')
  1121  007DC2  0E33               	movlw	51
  1122  007DC4  1830               	xorwf	_varAux^0,w,c
  1123  007DC6  A4D8               	btfss	status,2,c
  1124  007DC8  EFE8  F03E         	goto	u631
  1125  007DCC  EFEA  F03E         	goto	u630
  1126  007DD0                     u631:
  1127  007DD0  EF24  F03E         	goto	l1744
  1128  007DD4                     u630:
  1129  007DD4                     
  1130                           ;clsMenu.c: 75:      {;clsMenu.c: 76:          if(varAbierta == 1){
  1131  007DD4  0414               	decf	_varAbierta^0,w,c
  1132  007DD6  1015               	iorwf	(_varAbierta+1)^0,w,c
  1133  007DD8  A4D8               	btfss	status,2,c
  1134  007DDA  EFF1  F03E         	goto	u641
  1135  007DDE  EFF3  F03E         	goto	u640
  1136  007DE2                     u641:
  1137  007DE2  EF32  F03F         	goto	l1818
  1138  007DE6                     u640:
  1139  007DE6  EF27  F03F         	goto	l1816
  1140  007DEA                     l1804:
  1141                           
  1142                           ;clsMenu.c: 78:             {;clsMenu.c: 79:                    LCD_String_xy(0,0,"Apert
      +                          ura        ");
  1143  007DEA  0E00               	movlw	0
  1144  007DEC  6E35               	movwf	LCD_String_xy@pos^0,c
  1145  007DEE  0EE9               	movlw	low STR_18
  1146  007DF0  6E36               	movwf	LCD_String_xy@msg^0,c
  1147  007DF2  0E7E               	movlw	high STR_18
  1148  007DF4  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1149  007DF6  0E00               	movlw	0
  1150  007DF8  ECF2  F03B         	call	_LCD_String_xy
  1151  007DFC                     
  1152                           ;clsMenu.c: 80:                    _delay((unsigned long)((200)*(8000000/4000.0)));
  1153  007DFC  0E03               	movlw	3
  1154  007DFE  6E47               	movwf	(??_menu+1)^0,c
  1155  007E00  0E08               	movlw	8
  1156  007E02  6E46               	movwf	??_menu^0,c
  1157  007E04  0E77               	movlw	119
  1158  007E06                     u947:
  1159  007E06  2EE8               	decfsz	wreg,f,c
  1160  007E08  D7FE               	bra	u947
  1161  007E0A  2E46               	decfsz	??_menu^0,f,c
  1162  007E0C  D7FC               	bra	u947
  1163  007E0E  2E47               	decfsz	(??_menu+1)^0,f,c
  1164  007E10  D7FA               	bra	u947
  1165  007E12  F000               	nop	
  1166  007E14                     
  1167                           ;clsMenu.c: 81:                    motorCierre();
  1168  007E14  EC8C  F03B         	call	_motorCierre	;wreg free
  1169  007E18                     
  1170                           ;clsMenu.c: 82:                    _delay((unsigned long)((400)*(8000000/4000.0)));
  1171  007E18  0E05               	movlw	5
  1172  007E1A  6E47               	movwf	(??_menu+1)^0,c
  1173  007E1C  0E0F               	movlw	15
  1174  007E1E  6E46               	movwf	??_menu^0,c
  1175  007E20  0EF1               	movlw	241
  1176  007E22                     u957:
  1177  007E22  2EE8               	decfsz	wreg,f,c
  1178  007E24  D7FE               	bra	u957
  1179  007E26  2E46               	decfsz	??_menu^0,f,c
  1180  007E28  D7FC               	bra	u957
  1181  007E2A  2E47               	decfsz	(??_menu+1)^0,f,c
  1182  007E2C  D7FA               	bra	u957
  1183  007E2E  F000               	nop	
  1184  007E30                     
  1185                           ;clsMenu.c: 83:                    motorStop();
  1186  007E30  EC8E  F03B         	call	_motorStop	;wreg free
  1187                           
  1188                           ;clsMenu.c: 84:                    LCD_String_xy(0,0,"Abierta          ");
  1189  007E34  0E00               	movlw	0
  1190  007E36  6E35               	movwf	LCD_String_xy@pos^0,c
  1191  007E38  0EA1               	movlw	low STR_19
  1192  007E3A  6E36               	movwf	LCD_String_xy@msg^0,c
  1193  007E3C  0E7E               	movlw	high STR_19
  1194  007E3E  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1195  007E40  0E00               	movlw	0
  1196  007E42  ECF2  F03B         	call	_LCD_String_xy
  1197  007E46                     
  1198                           ;clsMenu.c: 85:                    varAbierta = 0;
  1199  007E46  0E00               	movlw	0
  1200  007E48  6E15               	movwf	(_varAbierta+1)^0,c
  1201  007E4A  0E00               	movlw	0
  1202  007E4C  6E14               	movwf	_varAbierta^0,c
  1203  007E4E                     l1816:
  1204                           
  1205                           ;clsMenu.c: 77:                while(varAbierta == 1)
  1206  007E4E  0414               	decf	_varAbierta^0,w,c
  1207  007E50  1015               	iorwf	(_varAbierta+1)^0,w,c
  1208  007E52  B4D8               	btfsc	status,2,c
  1209  007E54  EF2E  F03F         	goto	u651
  1210  007E58  EF30  F03F         	goto	u650
  1211  007E5C                     u651:
  1212  007E5C  EFF5  F03E         	goto	l1804
  1213  007E60                     u650:
  1214  007E60  EF24  F03E         	goto	l1744
  1215  007E64                     l1818:
  1216                           
  1217                           ;clsMenu.c: 89:          {;clsMenu.c: 90:           LCD_String_xy(0,0,"Cortina cerrada "
      +                          );
  1218  007E64  0E00               	movlw	0
  1219  007E66  6E35               	movwf	LCD_String_xy@pos^0,c
  1220  007E68  0EFA               	movlw	low STR_22
  1221  007E6A  6E36               	movwf	LCD_String_xy@msg^0,c
  1222  007E6C  0E7E               	movlw	high STR_22
  1223  007E6E  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1224  007E70  0E00               	movlw	0
  1225  007E72  ECF2  F03B         	call	_LCD_String_xy
  1226  007E76  EF24  F03E         	goto	l1744
  1227  007E7A  0012               	return		;funcret
  1228  007E7C                     __end_of_menu:
  1229                           	callstack 0
  1230                           
  1231 ;; *************** function _motor_ini *****************
  1232 ;; Defined at:
  1233 ;;		line 22 in file "clsMotor.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_menu
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text2
  1261  007732                     __ptext2:
  1262                           	callstack 0
  1263  007732                     _motor_ini:
  1264                           	callstack 29
  1265  007732                     
  1266                           ;clsMotor.c: 23:     PORTA = 0x00;
  1267  007732  0E00               	movlw	0
  1268  007734  6E80               	movwf	128,c	;volatile
  1269                           
  1270                           ;clsMotor.c: 24:     TRISA = 0x00;
  1271  007736  0E00               	movlw	0
  1272  007738  6E92               	movwf	146,c	;volatile
  1273  00773A  0012               	return		;funcret
  1274  00773C                     __end_of_motor_ini:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _motorStop *****************
  1278 ;; Defined at:
  1279 ;;		line 14 in file "clsMotor.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		None
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        0 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_menu
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text3
  1307  00771C                     __ptext3:
  1308                           	callstack 0
  1309  00771C                     _motorStop:
  1310                           	callstack 29
  1311  00771C                     
  1312                           ;clsMotor.c: 16:    PORTAbits.RA1 = 0;
  1313  00771C  9280               	bcf	128,1,c	;volatile
  1314                           
  1315                           ;clsMotor.c: 17:    PORTAbits.RA2 = 0;;
  1316  00771E  9480               	bcf	128,2,c	;volatile
  1317  007720  0012               	return		;funcret
  1318  007722                     __end_of_motorStop:
  1319                           	callstack 0
  1320                           
  1321 ;; *************** function _motorCierre *****************
  1322 ;; Defined at:
  1323 ;;		line 9 in file "clsMotor.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		None
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_menu
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text4
  1351  007718                     __ptext4:
  1352                           	callstack 0
  1353  007718                     _motorCierre:
  1354                           	callstack 29
  1355  007718                     
  1356                           ;clsMotor.c: 11:     PORTAbits.RA2 = 1;
  1357  007718  8480               	bsf	128,2,c	;volatile
  1358  00771A  0012               	return		;funcret
  1359  00771C                     __end_of_motorCierre:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _motorApertura *****************
  1363 ;; Defined at:
  1364 ;;		line 4 in file "clsMotor.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		None
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1378 ;;      Params:         0       0       0       0       0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1381 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1382 ;;Total ram usage:        0 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_menu
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text5
  1392  007714                     __ptext5:
  1393                           	callstack 0
  1394  007714                     _motorApertura:
  1395                           	callstack 29
  1396  007714                     
  1397                           ;clsMotor.c: 6:     PORTAbits.RA1 = 1;
  1398  007714  8280               	bsf	128,1,c	;volatile
  1399  007716  0012               	return		;funcret
  1400  007718                     __end_of_motorApertura:
  1401                           	callstack 0
  1402                           
  1403 ;; *************** function _ledencendido *****************
  1404 ;; Defined at:
  1405 ;;		line 3 in file "clsAlarmas.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		None
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1422 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_menu
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text6
  1433  007710                     __ptext6:
  1434                           	callstack 0
  1435  007710                     _ledencendido:
  1436                           	callstack 29
  1437  007710                     
  1438                           ;clsAlarmas.c: 5:     PORTEbits.RE0 = 1;
  1439  007710  8084               	bsf	132,0,c	;volatile
  1440  007712  0012               	return		;funcret
  1441  007714                     __end_of_ledencendido:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function _despertador *****************
  1445 ;; Defined at:
  1446 ;;		line 80 in file "clsDespertador.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1462 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1463 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1464 ;;Total ram usage:        2 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 4
  1467 ;; This function calls:
  1468 ;;		_LCD_String_xy
  1469 ;;		_recuperarHoraBluetooth
  1470 ;;		_recuperarHorarioTeclado
  1471 ;; This function is called by:
  1472 ;;		_menu
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text7
  1477  007978                     __ptext7:
  1478                           	callstack 0
  1479  007978                     _despertador:
  1480                           	callstack 25
  1481  007978                     
  1482                           ;clsDespertador.c: 83:     LCD_String_xy(0,0,"1. Bluetooth    ");
  1483  007978  0E00               	movlw	0
  1484  00797A  6E35               	movwf	LCD_String_xy@pos^0,c
  1485  00797C  0E2D               	movlw	low STR_9
  1486  00797E  6E36               	movwf	LCD_String_xy@msg^0,c
  1487  007980  0E7F               	movlw	high STR_9
  1488  007982  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1489  007984  0E00               	movlw	0
  1490  007986  ECF2  F03B         	call	_LCD_String_xy
  1491  00798A                     
  1492                           ;clsDespertador.c: 84:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1493  00798A  0E03               	movlw	3
  1494  00798C  6E3C               	movwf	(??_despertador+1)^0,c
  1495  00798E  0E08               	movlw	8
  1496  007990  6E3B               	movwf	??_despertador^0,c
  1497  007992  0E77               	movlw	119
  1498  007994                     u967:
  1499  007994  2EE8               	decfsz	wreg,f,c
  1500  007996  D7FE               	bra	u967
  1501  007998  2E3B               	decfsz	??_despertador^0,f,c
  1502  00799A  D7FC               	bra	u967
  1503  00799C  2E3C               	decfsz	(??_despertador+1)^0,f,c
  1504  00799E  D7FA               	bra	u967
  1505  0079A0  F000               	nop	
  1506  0079A2                     
  1507                           ;clsDespertador.c: 85:     LCD_String_xy(0,0,"2. Teclado      ");
  1508  0079A2  0E00               	movlw	0
  1509  0079A4  6E35               	movwf	LCD_String_xy@pos^0,c
  1510  0079A6  0E1C               	movlw	low STR_10
  1511  0079A8  6E36               	movwf	LCD_String_xy@msg^0,c
  1512  0079AA  0E7F               	movlw	high STR_10
  1513  0079AC  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1514  0079AE  0E00               	movlw	0
  1515  0079B0  ECF2  F03B         	call	_LCD_String_xy
  1516                           
  1517                           ;clsDespertador.c: 86:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1518  0079B4  0E03               	movlw	3
  1519  0079B6  6E3C               	movwf	(??_despertador+1)^0,c
  1520  0079B8  0E08               	movlw	8
  1521  0079BA  6E3B               	movwf	??_despertador^0,c
  1522  0079BC  0E77               	movlw	119
  1523  0079BE                     u977:
  1524  0079BE  2EE8               	decfsz	wreg,f,c
  1525  0079C0  D7FE               	bra	u977
  1526  0079C2  2E3B               	decfsz	??_despertador^0,f,c
  1527  0079C4  D7FC               	bra	u977
  1528  0079C6  2E3C               	decfsz	(??_despertador+1)^0,f,c
  1529  0079C8  D7FA               	bra	u977
  1530  0079CA  F000               	nop	
  1531  0079CC                     
  1532                           ;clsDespertador.c: 88:     if(varOpcion =='1')
  1533  0079CC  0E31               	movlw	49
  1534  0079CE  1854               	xorwf	_varOpcion^0,w,c
  1535  0079D0  A4D8               	btfss	status,2,c
  1536  0079D2  EFED  F03C         	goto	u591
  1537  0079D6  EFEF  F03C         	goto	u590
  1538  0079DA                     u591:
  1539  0079DA  EFF1  F03C         	goto	l1732
  1540  0079DE                     u590:
  1541  0079DE                     
  1542                           ;clsDespertador.c: 89:     {;clsDespertador.c: 90:        recuperarHoraBluetooth();
  1543  0079DE  EC58  F03D         	call	_recuperarHoraBluetooth	;wreg free
  1544  0079E2                     l1732:
  1545                           
  1546                           ;clsDespertador.c: 92:     if(varOpcion =='2')
  1547  0079E2  0E32               	movlw	50
  1548  0079E4  1854               	xorwf	_varOpcion^0,w,c
  1549  0079E6  A4D8               	btfss	status,2,c
  1550  0079E8  EFF8  F03C         	goto	u601
  1551  0079EC  EFFA  F03C         	goto	u600
  1552  0079F0                     u601:
  1553  0079F0  EFFC  F03C         	goto	l57
  1554  0079F4                     u600:
  1555  0079F4                     
  1556                           ;clsDespertador.c: 93:     {;clsDespertador.c: 94:        recuperarHorarioTeclado();
  1557  0079F4  EC87  F03B         	call	_recuperarHorarioTeclado	;wreg free
  1558  0079F8                     l57:
  1559  0079F8  0012               	return		;funcret
  1560  0079FA                     __end_of_despertador:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function _recuperarHoraBluetooth *****************
  1564 ;; Defined at:
  1565 ;;		line 34 in file "clsDespertador.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1579 ;;      Params:         0       0       0       0       0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1581 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1582 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1583 ;;Total ram usage:        1 bytes
  1584 ;; Hardware stack levels used: 1
  1585 ;; Hardware stack levels required when called: 3
  1586 ;; This function calls:
  1587 ;;		_LCD_String_xy
  1588 ;;		_USART_ReceiveChar
  1589 ;;		_ledActivador
  1590 ;;		_lederror
  1591 ;;		_recuperarHorarioTeclado
  1592 ;; This function is called by:
  1593 ;;		_despertador
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text8
  1598  007AB0                     __ptext8:
  1599                           	callstack 0
  1600  007AB0                     _recuperarHoraBluetooth:
  1601                           	callstack 25
  1602  007AB0                     
  1603                           ;clsDespertador.c: 36:     varOpcion =0;
  1604  007AB0  0E00               	movlw	0
  1605  007AB2  6E54               	movwf	_varOpcion^0,c
  1606  007AB4                     
  1607                           ;clsDespertador.c: 37:     ledActivador(1);
  1608  007AB4  0E00               	movlw	0
  1609  007AB6  6E32               	movwf	(ledActivador@prmEstado+1)^0,c
  1610  007AB8  0E01               	movlw	1
  1611  007ABA  6E31               	movwf	ledActivador@prmEstado^0,c
  1612  007ABC  ECC2  F03B         	call	_ledActivador	;wreg free
  1613  007AC0                     
  1614                           ;clsDespertador.c: 38:     LCD_String_xy(0,0,"Bluetooth ON   ");
  1615  007AC0  0E00               	movlw	0
  1616  007AC2  6E35               	movwf	LCD_String_xy@pos^0,c
  1617  007AC4  0E6E               	movlw	low STR_1
  1618  007AC6  6E36               	movwf	LCD_String_xy@msg^0,c
  1619  007AC8  0E7F               	movlw	high STR_1
  1620  007ACA  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1621  007ACC  0E00               	movlw	0
  1622  007ACE  ECF2  F03B         	call	_LCD_String_xy
  1623  007AD2                     
  1624                           ;clsDespertador.c: 40:     varHorasD=USART_ReceiveChar();
  1625  007AD2  ECAB  F03B         	call	_USART_ReceiveChar	;wreg free
  1626  007AD6  6E3A               	movwf	??_recuperarHoraBluetooth^0,c
  1627  007AD8  503A               	movf	??_recuperarHoraBluetooth^0,w,c
  1628  007ADA  6E1A               	movwf	_varHorasD^0,c
  1629  007ADC  6A1B               	clrf	(_varHorasD+1)^0,c
  1630  007ADE                     
  1631                           ;clsDespertador.c: 41:     varMinutosD=USART_ReceiveChar();
  1632  007ADE  ECAB  F03B         	call	_USART_ReceiveChar	;wreg free
  1633  007AE2  6E3A               	movwf	??_recuperarHoraBluetooth^0,c
  1634  007AE4  503A               	movf	??_recuperarHoraBluetooth^0,w,c
  1635  007AE6  6E18               	movwf	_varMinutosD^0,c
  1636  007AE8  6A19               	clrf	(_varMinutosD+1)^0,c
  1637  007AEA                     
  1638                           ;clsDespertador.c: 42:     varFechaD=USART_ReceiveChar();
  1639  007AEA  ECAB  F03B         	call	_USART_ReceiveChar	;wreg free
  1640  007AEE  6E3A               	movwf	??_recuperarHoraBluetooth^0,c
  1641  007AF0  503A               	movf	??_recuperarHoraBluetooth^0,w,c
  1642  007AF2  6E16               	movwf	_varFechaD^0,c
  1643  007AF4  6A17               	clrf	(_varFechaD+1)^0,c
  1644  007AF6                     
  1645                           ;clsDespertador.c: 43:     if(varHorasD!=0&&varMinutosD!=0&&varFechaD!=0)
  1646  007AF6  501A               	movf	_varHorasD^0,w,c
  1647  007AF8  101B               	iorwf	(_varHorasD+1)^0,w,c
  1648  007AFA  B4D8               	btfsc	status,2,c
  1649  007AFC  EF82  F03D         	goto	u551
  1650  007B00  EF84  F03D         	goto	u550
  1651  007B04                     u551:
  1652  007B04  EFAA  F03D         	goto	l1694
  1653  007B08                     u550:
  1654  007B08  5018               	movf	_varMinutosD^0,w,c
  1655  007B0A  1019               	iorwf	(_varMinutosD+1)^0,w,c
  1656  007B0C  B4D8               	btfsc	status,2,c
  1657  007B0E  EF8B  F03D         	goto	u561
  1658  007B12  EF8D  F03D         	goto	u560
  1659  007B16                     u561:
  1660  007B16  EFAA  F03D         	goto	l1694
  1661  007B1A                     u560:
  1662  007B1A  5016               	movf	_varFechaD^0,w,c
  1663  007B1C  1017               	iorwf	(_varFechaD+1)^0,w,c
  1664  007B1E  B4D8               	btfsc	status,2,c
  1665  007B20  EF94  F03D         	goto	u571
  1666  007B24  EF96  F03D         	goto	u570
  1667  007B28                     u571:
  1668  007B28  EFAA  F03D         	goto	l1694
  1669  007B2C                     u570:
  1670  007B2C                     
  1671                           ;clsDespertador.c: 44:     {;clsDespertador.c: 45:         varHoraAlarma = varHorasD;
  1672  007B2C  C01A  F02A         	movff	_varHorasD,_varHoraAlarma
  1673  007B30  C01B  F02B         	movff	_varHorasD+1,_varHoraAlarma+1
  1674                           
  1675                           ;clsDespertador.c: 46:         varMinutosAlarma = varMinutosD;
  1676  007B34  C018  F028         	movff	_varMinutosD,_varMinutosAlarma
  1677  007B38  C019  F029         	movff	_varMinutosD+1,_varMinutosAlarma+1
  1678                           
  1679                           ;clsDespertador.c: 47:         varFecha = varFechaD;
  1680  007B3C  C016  F020         	movff	_varFechaD,_varFecha
  1681  007B40  C017  F021         	movff	_varFechaD+1,_varFecha+1
  1682  007B44                     
  1683                           ;clsDespertador.c: 48:         ledActivador(0);
  1684  007B44  0E00               	movlw	0
  1685  007B46  6E32               	movwf	(ledActivador@prmEstado+1)^0,c
  1686  007B48  0E00               	movlw	0
  1687  007B4A  6E31               	movwf	ledActivador@prmEstado^0,c
  1688  007B4C  ECC2  F03B         	call	_ledActivador	;wreg free
  1689                           
  1690                           ;clsDespertador.c: 49:     }
  1691  007B50  EF1B  F03E         	goto	l49
  1692  007B54                     l1694:
  1693                           
  1694                           ;clsDespertador.c: 51:     {;clsDespertador.c: 52:         ledActivador(0);
  1695  007B54  0E00               	movlw	0
  1696  007B56  6E32               	movwf	(ledActivador@prmEstado+1)^0,c
  1697  007B58  0E00               	movlw	0
  1698  007B5A  6E31               	movwf	ledActivador@prmEstado^0,c
  1699  007B5C  ECC2  F03B         	call	_ledActivador	;wreg free
  1700                           
  1701                           ;clsDespertador.c: 53:         lederror(1);
  1702  007B60  0E00               	movlw	0
  1703  007B62  6E32               	movwf	(lederror@prmEstado+1)^0,c
  1704  007B64  0E01               	movlw	1
  1705  007B66  6E31               	movwf	lederror@prmEstado^0,c
  1706  007B68  ECB4  F03B         	call	_lederror	;wreg free
  1707  007B6C                     
  1708                           ;clsDespertador.c: 54:          LCD_String_xy(0,0,"Error...  ");
  1709  007B6C  0E00               	movlw	0
  1710  007B6E  6E35               	movwf	LCD_String_xy@pos^0,c
  1711  007B70  0EB5               	movlw	low STR_2
  1712  007B72  6E36               	movwf	LCD_String_xy@msg^0,c
  1713  007B74  0E7F               	movlw	high STR_2
  1714  007B76  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1715  007B78  0E00               	movlw	0
  1716  007B7A  ECF2  F03B         	call	_LCD_String_xy
  1717  007B7E                     
  1718                           ;clsDespertador.c: 55:          _delay((unsigned long)((50)*(8000000/4000.0)));
  1719  007B7E  0E82               	movlw	130
  1720  007B80  6E3A               	movwf	??_recuperarHoraBluetooth^0,c
  1721  007B82  0EDE               	movlw	222
  1722  007B84                     u987:
  1723  007B84  2EE8               	decfsz	wreg,f,c
  1724  007B86  D7FE               	bra	u987
  1725  007B88  2E3A               	decfsz	??_recuperarHoraBluetooth^0,f,c
  1726  007B8A  D7FC               	bra	u987
  1727  007B8C                     
  1728                           ;clsDespertador.c: 56:          LCD_String_xy(0,0,"No se   ");
  1729  007B8C  0E00               	movlw	0
  1730  007B8E  6E35               	movwf	LCD_String_xy@pos^0,c
  1731  007B90  0EC0               	movlw	low STR_3
  1732  007B92  6E36               	movwf	LCD_String_xy@msg^0,c
  1733  007B94  0E7F               	movlw	high STR_3
  1734  007B96  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1735  007B98  0E00               	movlw	0
  1736  007B9A  ECF2  F03B         	call	_LCD_String_xy
  1737  007B9E                     
  1738                           ;clsDespertador.c: 57:          _delay((unsigned long)((50)*(8000000/4000.0)));
  1739  007B9E  0E82               	movlw	130
  1740  007BA0  6E3A               	movwf	??_recuperarHoraBluetooth^0,c
  1741  007BA2  0EDE               	movlw	222
  1742  007BA4                     u997:
  1743  007BA4  2EE8               	decfsz	wreg,f,c
  1744  007BA6  D7FE               	bra	u997
  1745  007BA8  2E3A               	decfsz	??_recuperarHoraBluetooth^0,f,c
  1746  007BAA  D7FC               	bra	u997
  1747  007BAC                     
  1748                           ;clsDespertador.c: 58:          LCD_String_xy(0,0,"recibieron   ");
  1749  007BAC  0E00               	movlw	0
  1750  007BAE  6E35               	movwf	LCD_String_xy@pos^0,c
  1751  007BB0  0E8E               	movlw	low STR_4
  1752  007BB2  6E36               	movwf	LCD_String_xy@msg^0,c
  1753  007BB4  0E7F               	movlw	high STR_4
  1754  007BB6  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1755  007BB8  0E00               	movlw	0
  1756  007BBA  ECF2  F03B         	call	_LCD_String_xy
  1757  007BBE                     
  1758                           ;clsDespertador.c: 59:          _delay((unsigned long)((50)*(8000000/4000.0)));
  1759  007BBE  0E82               	movlw	130
  1760  007BC0  6E3A               	movwf	??_recuperarHoraBluetooth^0,c
  1761  007BC2  0EDE               	movlw	222
  1762  007BC4                     u1007:
  1763  007BC4  2EE8               	decfsz	wreg,f,c
  1764  007BC6  D7FE               	bra	u1007
  1765  007BC8  2E3A               	decfsz	??_recuperarHoraBluetooth^0,f,c
  1766  007BCA  D7FC               	bra	u1007
  1767  007BCC                     
  1768                           ;clsDespertador.c: 60:          LCD_String_xy(0,0,"los datos   ");
  1769  007BCC  0E00               	movlw	0
  1770  007BCE  6E35               	movwf	LCD_String_xy@pos^0,c
  1771  007BD0  0E9C               	movlw	low STR_5
  1772  007BD2  6E36               	movwf	LCD_String_xy@msg^0,c
  1773  007BD4  0E7F               	movlw	high STR_5
  1774  007BD6  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1775  007BD8  0E00               	movlw	0
  1776  007BDA  ECF2  F03B         	call	_LCD_String_xy
  1777  007BDE                     
  1778                           ;clsDespertador.c: 61:          _delay((unsigned long)((50)*(8000000/4000.0)));
  1779  007BDE  0E82               	movlw	130
  1780  007BE0  6E3A               	movwf	??_recuperarHoraBluetooth^0,c
  1781  007BE2  0EDE               	movlw	222
  1782  007BE4                     u1017:
  1783  007BE4  2EE8               	decfsz	wreg,f,c
  1784  007BE6  D7FE               	bra	u1017
  1785  007BE8  2E3A               	decfsz	??_recuperarHoraBluetooth^0,f,c
  1786  007BEA  D7FC               	bra	u1017
  1787  007BEC                     
  1788                           ;clsDespertador.c: 62:          LCD_String_xy(0,0,"Usar teclado?  ");
  1789  007BEC  0E00               	movlw	0
  1790  007BEE  6E35               	movwf	LCD_String_xy@pos^0,c
  1791  007BF0  0E7E               	movlw	low STR_6
  1792  007BF2  6E36               	movwf	LCD_String_xy@msg^0,c
  1793  007BF4  0E7F               	movlw	high STR_6
  1794  007BF6  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1795  007BF8  0E00               	movlw	0
  1796  007BFA  ECF2  F03B         	call	_LCD_String_xy
  1797  007BFE                     
  1798                           ;clsDespertador.c: 64:          LCD_String_xy(0,0,"1. Si          ");
  1799  007BFE  0E00               	movlw	0
  1800  007C00  6E35               	movwf	LCD_String_xy@pos^0,c
  1801  007C02  0E4E               	movlw	low STR_7
  1802  007C04  6E36               	movwf	LCD_String_xy@msg^0,c
  1803  007C06  0E7F               	movlw	high STR_7
  1804  007C08  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1805  007C0A  0E00               	movlw	0
  1806  007C0C  ECF2  F03B         	call	_LCD_String_xy
  1807  007C10                     
  1808                           ;clsDespertador.c: 65:          LCD_String_xy(0,0,"2. No          ");
  1809  007C10  0E00               	movlw	0
  1810  007C12  6E35               	movwf	LCD_String_xy@pos^0,c
  1811  007C14  0E5E               	movlw	low STR_8
  1812  007C16  6E36               	movwf	LCD_String_xy@msg^0,c
  1813  007C18  0E7F               	movlw	high STR_8
  1814  007C1A  6E37               	movwf	(LCD_String_xy@msg+1)^0,c
  1815  007C1C  0E00               	movlw	0
  1816  007C1E  ECF2  F03B         	call	_LCD_String_xy
  1817  007C22                     
  1818                           ;clsDespertador.c: 66:          if(varOpcion==1)
  1819  007C22  0454               	decf	_varOpcion^0,w,c
  1820  007C24  A4D8               	btfss	status,2,c
  1821  007C26  EF17  F03E         	goto	u581
  1822  007C2A  EF19  F03E         	goto	u580
  1823  007C2E                     u581:
  1824  007C2E  EF1B  F03E         	goto	l49
  1825  007C32                     u580:
  1826  007C32                     
  1827                           ;clsDespertador.c: 67:          {;clsDespertador.c: 68:              recuperarHorarioTec
      +                          lado();
  1828  007C32  EC87  F03B         	call	_recuperarHorarioTeclado	;wreg free
  1829  007C36                     l49:
  1830  007C36  0012               	return		;funcret
  1831  007C38                     __end_of_recuperarHoraBluetooth:
  1832                           	callstack 0
  1833                           
  1834 ;; *************** function _recuperarHorarioTeclado *****************
  1835 ;; Defined at:
  1836 ;;		line 74 in file "clsDespertador.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		None
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_recuperarHoraBluetooth
  1860 ;;		_despertador
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text9
  1865  00770E                     __ptext9:
  1866                           	callstack 0
  1867  00770E                     _recuperarHorarioTeclado:
  1868                           	callstack 28
  1869  00770E  0012               	return		;funcret
  1870  007710                     __end_of_recuperarHorarioTeclado:
  1871                           	callstack 0
  1872                           
  1873 ;; *************** function _lederror *****************
  1874 ;; Defined at:
  1875 ;;		line 22 in file "clsAlarmas.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  prmEstado       2    0[COMRAM] unsigned int 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1889 ;;      Params:         2       0       0       0       0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1892 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1893 ;;Total ram usage:        2 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_recuperarHoraBluetooth
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text10
  1903  007768                     __ptext10:
  1904                           	callstack 0
  1905  007768                     _lederror:
  1906                           	callstack 27
  1907  007768                     
  1908                           ;clsAlarmas.c: 22: void lederror(unsigned int prmEstado);clsAlarmas.c: 23: {;clsAlarmas.
      +                          c: 24:     if(prmEstado == 1)
  1909  007768  0431               	decf	lederror@prmEstado^0,w,c
  1910  00776A  1032               	iorwf	(lederror@prmEstado+1)^0,w,c
  1911  00776C  A4D8               	btfss	status,2,c
  1912  00776E  EFBB  F03B         	goto	u541
  1913  007772  EFBD  F03B         	goto	u540
  1914  007776                     u541:
  1915  007776  EFC0  F03B         	goto	l75
  1916  00777A                     u540:
  1917  00777A                     
  1918                           ;clsAlarmas.c: 25:     {;clsAlarmas.c: 26:         PORTEbits.RE2 = 1 ;
  1919  00777A  8484               	bsf	132,2,c	;volatile
  1920                           
  1921                           ;clsAlarmas.c: 27:     }
  1922  00777C  EFC1  F03B         	goto	l77
  1923  007780                     l75:
  1924  007780  9484               	bcf	132,2,c	;volatile
  1925  007782                     l77:
  1926  007782  0012               	return		;funcret
  1927  007784                     __end_of_lederror:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _ledActivador *****************
  1931 ;; Defined at:
  1932 ;;		line 32 in file "clsAlarmas.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  prmEstado       2    0[COMRAM] unsigned int 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1946 ;;      Params:         2       0       0       0       0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1948 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1949 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1950 ;;Total ram usage:        3 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_recuperarHoraBluetooth
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text11
  1960  007784                     __ptext11:
  1961                           	callstack 0
  1962  007784                     _ledActivador:
  1963                           	callstack 27
  1964  007784                     
  1965                           ;clsAlarmas.c: 32: void ledActivador(unsigned int prmEstado);clsAlarmas.c: 33: {;clsAlar
      +                          mas.c: 34:      if(prmEstado == 1)
  1966  007784  0431               	decf	ledActivador@prmEstado^0,w,c
  1967  007786  1032               	iorwf	(ledActivador@prmEstado+1)^0,w,c
  1968  007788  A4D8               	btfss	status,2,c
  1969  00778A  EFC9  F03B         	goto	u521
  1970  00778E  EFCB  F03B         	goto	u520
  1971  007792                     u521:
  1972  007792  EFD6  F03B         	goto	l80
  1973  007796                     u520:
  1974  007796                     l81:
  1975                           
  1976                           ;clsAlarmas.c: 37:         {;clsAlarmas.c: 38:            PORTEbits.RE1 = 1;
  1977  007796  8284               	bsf	132,1,c	;volatile
  1978  007798                     
  1979                           ;clsAlarmas.c: 39:            _delay((unsigned long)((1)*(8000000/4000.0)));
  1980  007798  0E03               	movlw	3
  1981  00779A  6E33               	movwf	??_ledActivador^0,c
  1982  00779C  0E98               	movlw	152
  1983  00779E                     u1027:
  1984  00779E  2EE8               	decfsz	wreg,f,c
  1985  0077A0  D7FE               	bra	u1027
  1986  0077A2  2E33               	decfsz	??_ledActivador^0,f,c
  1987  0077A4  D7FC               	bra	u1027
  1988  0077A6                     
  1989                           ;clsAlarmas.c: 40:            PORTEbits.RE1= 0;
  1990  0077A6  9284               	bcf	132,1,c	;volatile
  1991  0077A8  EFCB  F03B         	goto	l81
  1992  0077AC                     l80:
  1993  0077AC  9284               	bcf	132,1,c	;volatile
  1994  0077AE  0012               	return		;funcret
  1995  0077B0                     __end_of_ledActivador:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _USART_ReceiveChar *****************
  1999 ;; Defined at:
  2000 ;;		line 56 in file "clsBluetooth.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      unsigned char 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_recuperarHoraBluetooth
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text12
  2028  007756                     __ptext12:
  2029                           	callstack 0
  2030  007756                     _USART_ReceiveChar:
  2031                           	callstack 27
  2032  007756                     l408:
  2033  007756  AA9E               	btfss	3998,5,c	;volatile
  2034  007758  EFB0  F03B         	goto	u61
  2035  00775C  EFB2  F03B         	goto	u60
  2036  007760                     u61:
  2037  007760  EFAB  F03B         	goto	l408
  2038  007764                     u60:
  2039  007764                     
  2040                           ;clsBluetooth.c: 60:     return(RCREG);
  2041  007764  50AE               	movf	174,w,c	;volatile
  2042  007766  0012               	return		;funcret
  2043  007768                     __end_of_USART_ReceiveChar:
  2044                           	callstack 0
  2045                           
  2046 ;; *************** function _LCD_String_xy *****************
  2047 ;; Defined at:
  2048 ;;		line 60 in file "clsLcd.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  row             1    wreg     unsigned char 
  2051 ;;  pos             1    4[COMRAM] unsigned char 
  2052 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  2053 ;;		 -> STR_41(12), main_rtc@date(10), main_rtc@hours(10), STR_24(3), 
  2054 ;;		 -> STR_23(3), STR_22(17), STR_21(18), STR_20(17), 
  2055 ;;		 -> STR_19(18), STR_18(17), STR_17(17), STR_16(16), 
  2056 ;;		 -> STR_15(18), STR_14(18), STR_13(18), STR_12(19), 
  2057 ;;		 -> STR_11(16), STR_10(17), STR_9(17), STR_8(16), 
  2058 ;;		 -> STR_7(16), STR_6(16), STR_5(13), STR_4(14), 
  2059 ;;		 -> STR_3(9), STR_2(11), STR_1(16), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  row             1    7[COMRAM] unsigned char 
  2062 ;;  location        1    8[COMRAM] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2072 ;;      Params:         3       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2075 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2076 ;;Total ram usage:        5 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 2
  2079 ;; This function calls:
  2080 ;;		_LCD_Command
  2081 ;;		_LCD_String
  2082 ;; This function is called by:
  2083 ;;		_recuperarHoraBluetooth
  2084 ;;		_despertador
  2085 ;;		_menu
  2086 ;;		_main_rtc
  2087 ;;		_keypad_ini
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text13
  2092  0077E4                     __ptext13:
  2093                           	callstack 0
  2094  0077E4                     _LCD_String_xy:
  2095                           	callstack 25
  2096                           
  2097                           ;incstack = 0
  2098                           ;LCD_String_xy@row stored from wreg
  2099  0077E4  6E38               	movwf	LCD_String_xy@row^0,c
  2100  0077E6                     
  2101                           ;clsLcd.c: 63:     if(row<=1)
  2102  0077E6  0E02               	movlw	2
  2103  0077E8  6038               	cpfslt	LCD_String_xy@row^0,c
  2104  0077EA  EFF9  F03B         	goto	u531
  2105  0077EE  EFFB  F03B         	goto	u530
  2106  0077F2                     u531:
  2107  0077F2  EF04  F03C         	goto	l1662
  2108  0077F6                     u530:
  2109  0077F6                     
  2110                           ;clsLcd.c: 64:     {;clsLcd.c: 65:         location = (0x80) | ((pos) & 0x0f);
  2111  0077F6  5035               	movf	LCD_String_xy@pos^0,w,c
  2112  0077F8  0B0F               	andlw	15
  2113  0077FA  0980               	iorlw	128
  2114  0077FC  6E39               	movwf	LCD_String_xy@location^0,c
  2115  0077FE                     
  2116                           ;clsLcd.c: 66:         LCD_Command(location);
  2117  0077FE  5039               	movf	LCD_String_xy@location^0,w,c
  2118  007800  EC12  F03C         	call	_LCD_Command
  2119                           
  2120                           ;clsLcd.c: 67:     }
  2121  007804  EF0B  F03C         	goto	l1666
  2122  007808                     l1662:
  2123                           
  2124                           ;clsLcd.c: 69:     {;clsLcd.c: 70:         location = (0xC0) | ((pos) & 0x0f);
  2125  007808  5035               	movf	LCD_String_xy@pos^0,w,c
  2126  00780A  0B0F               	andlw	15
  2127  00780C  09C0               	iorlw	192
  2128  00780E  6E39               	movwf	LCD_String_xy@location^0,c
  2129  007810                     
  2130                           ;clsLcd.c: 71:         LCD_Command(location);
  2131  007810  5039               	movf	LCD_String_xy@location^0,w,c
  2132  007812  EC12  F03C         	call	_LCD_Command
  2133  007816                     l1666:
  2134                           
  2135                           ;clsLcd.c: 75:     LCD_String(msg);
  2136  007816  C036  F033         	movff	LCD_String_xy@msg,LCD_String@msg
  2137  00781A  C037  F034         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  2138  00781E  EC8D  F03C         	call	_LCD_String	;wreg free
  2139  007822  0012               	return		;funcret
  2140  007824                     __end_of_LCD_String_xy:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _LCD_String *****************
  2144 ;; Defined at:
  2145 ;;		line 49 in file "clsLcd.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  2148 ;;		 -> STR_41(12), STR_40(4), STR_39(4), STR_38(4), 
  2149 ;;		 -> STR_37(4), STR_36(4), STR_35(4), STR_34(4), 
  2150 ;;		 -> main_rtc@year(10), main_rtc@month(10), main_rtc@date(10), main_rtc@hours(10), 
  2151 ;;		 -> main_rtc@mins(10), main_rtc@secs(10), STR_24(3), STR_23(3), 
  2152 ;;		 -> STR_22(17), STR_21(18), STR_20(17), STR_19(18), 
  2153 ;;		 -> STR_18(17), STR_17(17), STR_16(16), STR_15(18), 
  2154 ;;		 -> STR_14(18), STR_13(18), STR_12(19), STR_11(16), 
  2155 ;;		 -> STR_10(17), STR_9(17), STR_8(16), STR_7(16), 
  2156 ;;		 -> STR_6(16), STR_5(13), STR_4(14), STR_3(9), 
  2157 ;;		 -> STR_2(11), STR_1(16), 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2169 ;;      Params:         2       0       0       0       0       0       0       0       0
  2170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2172 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2173 ;;Total ram usage:        2 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 1
  2176 ;; This function calls:
  2177 ;;		_LCD_Char
  2178 ;; This function is called by:
  2179 ;;		_LCD_String_xy
  2180 ;;		_main_rtc
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text14
  2185  00791A                     __ptext14:
  2186                           	callstack 0
  2187  00791A                     _LCD_String:
  2188                           	callstack 25
  2189  00791A                     
  2190                           ;clsLcd.c: 49: void LCD_String(const char *msg);clsLcd.c: 50: {;clsLcd.c: 51:  while((*m
      +                          sg)!=0)
  2191  00791A  EFA3  F03C         	goto	l1646
  2192  00791E                     l1642:
  2193                           
  2194                           ;clsLcd.c: 52:  {;clsLcd.c: 53:    LCD_Char(*msg);
  2195  00791E  C033  FFF6         	movff	LCD_String@msg,tblptrl
  2196  007922  C034  FFF7         	movff	LCD_String@msg+1,tblptrh
  2197  007926  6AF8               	clrf	tblptru,c
  2198  007928  0E07               	movlw	(high __ramtop+-1)
  2199  00792A  64F7               	cpfsgt	tblptrh,c
  2200  00792C  D003               	bra	u497
  2201  00792E  0008               	tblrd		*
  2202  007930  50F5               	movf	tablat,w,c
  2203  007932  D005               	bra	u490
  2204  007934                     u497:
  2205  007934  CFF6 FFE9          	movff	tblptrl,fsr0l
  2206  007938  CFF7 FFEA          	movff	tblptrh,fsr0h
  2207  00793C  50EF               	movf	indf0,w,c
  2208  00793E                     u490:
  2209  00793E  EC3A  F03C         	call	_LCD_Char
  2210  007942                     
  2211                           ;clsLcd.c: 54:    msg++;
  2212  007942  4A33               	infsnz	LCD_String@msg^0,f,c
  2213  007944  2A34               	incf	(LCD_String@msg+1)^0,f,c
  2214  007946                     l1646:
  2215                           
  2216                           ;clsLcd.c: 51:  while((*msg)!=0)
  2217  007946  C033  FFF6         	movff	LCD_String@msg,tblptrl
  2218  00794A  C034  FFF7         	movff	LCD_String@msg+1,tblptrh
  2219  00794E  6AF8               	clrf	tblptru,c
  2220  007950  0E07               	movlw	(high __ramtop+-1)
  2221  007952  64F7               	cpfsgt	tblptrh,c
  2222  007954  D003               	bra	u507
  2223  007956  0008               	tblrd		*
  2224  007958  50F5               	movf	tablat,w,c
  2225  00795A  D005               	bra	u500
  2226  00795C                     u507:
  2227  00795C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2228  007960  CFF7 FFEA          	movff	tblptrh,fsr0h
  2229  007964  50EF               	movf	indf0,w,c
  2230  007966                     u500:
  2231  007966  0900               	iorlw	0
  2232  007968  A4D8               	btfss	status,2,c
  2233  00796A  EFB9  F03C         	goto	u511
  2234  00796E  EFBB  F03C         	goto	u510
  2235  007972                     u511:
  2236  007972  EF8F  F03C         	goto	l1642
  2237  007976                     u510:
  2238  007976  0012               	return		;funcret
  2239  007978                     __end_of_LCD_String:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _LCD_Char *****************
  2243 ;; Defined at:
  2244 ;;		line 35 in file "clsLcd.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  dat             1    wreg     unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  dat             1    1[COMRAM] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0
  2259 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2260 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2261 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2262 ;;Total ram usage:        2 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_LCD_String
  2268 ;;		_keypad_ini
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text15
  2273  007874                     __ptext15:
  2274                           	callstack 0
  2275  007874                     _LCD_Char:
  2276                           	callstack 25
  2277                           
  2278                           ;incstack = 0
  2279                           ;LCD_Char@dat stored from wreg
  2280  007874  6E32               	movwf	LCD_Char@dat^0,c
  2281  007876                     
  2282                           ;clsLcd.c: 35: void LCD_Char(unsigned char dat);clsLcd.c: 36: {;clsLcd.c: 37:  LATB = (L
      +                          ATB & 0x0f) | (0xF0 & dat);
  2283  007876  C032  F031         	movff	LCD_Char@dat,??_LCD_Char
  2284  00787A  0EF0               	movlw	240
  2285  00787C  1631               	andwf	??_LCD_Char^0,f,c
  2286  00787E  508A               	movf	138,w,c	;volatile
  2287  007880  0B0F               	andlw	15
  2288  007882  1031               	iorwf	??_LCD_Char^0,w,c
  2289  007884  6E8A               	movwf	138,c	;volatile
  2290  007886                     
  2291                           ;clsLcd.c: 38:  LATB2 = 1;
  2292  007886  848A               	bsf	3978,2,c	;volatile
  2293  007888                     
  2294                           ;clsLcd.c: 39:  LATB3 = 1;
  2295  007888  868A               	bsf	3978,3,c	;volatile
  2296  00788A                     
  2297                           ;clsLcd.c: 40:  __nop();
  2298  00788A  F000               	nop	
  2299  00788C                     
  2300                           ;clsLcd.c: 41:  LATB3 = 0;
  2301  00788C  968A               	bcf	3978,3,c	;volatile
  2302  00788E                     
  2303                           ;clsLcd.c: 42:  _delay((unsigned long)((1)*(8000000/4000.0)));
  2304  00788E  0E03               	movlw	3
  2305  007890  6E31               	movwf	??_LCD_Char^0,c
  2306  007892  0E98               	movlw	152
  2307  007894                     u1037:
  2308  007894  2EE8               	decfsz	wreg,f,c
  2309  007896  D7FE               	bra	u1037
  2310  007898  2E31               	decfsz	??_LCD_Char^0,f,c
  2311  00789A  D7FC               	bra	u1037
  2312  00789C                     
  2313                           ;clsLcd.c: 43:     LATB = (LATB & 0x0f) | (dat<<4);
  2314  00789C  C032  F031         	movff	LCD_Char@dat,??_LCD_Char
  2315  0078A0  3A31               	swapf	??_LCD_Char^0,f,c
  2316  0078A2  0EF0               	movlw	240
  2317  0078A4  1631               	andwf	??_LCD_Char^0,f,c
  2318  0078A6  508A               	movf	138,w,c	;volatile
  2319  0078A8  0B0F               	andlw	15
  2320  0078AA  1031               	iorwf	??_LCD_Char^0,w,c
  2321  0078AC  6E8A               	movwf	138,c	;volatile
  2322  0078AE                     
  2323                           ;clsLcd.c: 44:  LATB3 = 1;
  2324  0078AE  868A               	bsf	3978,3,c	;volatile
  2325  0078B0                     
  2326                           ;clsLcd.c: 45:  __nop();
  2327  0078B0  F000               	nop	
  2328  0078B2                     
  2329                           ;clsLcd.c: 46:  LATB3 = 0;
  2330  0078B2  968A               	bcf	3978,3,c	;volatile
  2331                           
  2332                           ;clsLcd.c: 47:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2333  0078B4  0E08               	movlw	8
  2334  0078B6  6E31               	movwf	??_LCD_Char^0,c
  2335  0078B8  0ECA               	movlw	202
  2336  0078BA                     u1047:
  2337  0078BA  2EE8               	decfsz	wreg,f,c
  2338  0078BC  D7FE               	bra	u1047
  2339  0078BE  2E31               	decfsz	??_LCD_Char^0,f,c
  2340  0078C0  D7FC               	bra	u1047
  2341  0078C2  0012               	return		;funcret
  2342  0078C4                     __end_of_LCD_Char:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _LCD_Init *****************
  2346 ;; Defined at:
  2347 ;;		line 4 in file "clsLcd.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2361 ;;      Params:         0       0       0       0       0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2363 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2364 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2365 ;;Total ram usage:        1 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; Hardware stack levels required when called: 1
  2368 ;; This function calls:
  2369 ;;		_LCD_Command
  2370 ;; This function is called by:
  2371 ;;		_menu
  2372 ;;		_main_rtc
  2373 ;;		_keypad_ini
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text16
  2378  0077B0                     __ptext16:
  2379                           	callstack 0
  2380  0077B0                     _LCD_Init:
  2381                           	callstack 28
  2382  0077B0                     
  2383                           ;clsLcd.c: 6:     TRISB = 0;
  2384  0077B0  0E00               	movlw	0
  2385  0077B2  6E93               	movwf	147,c	;volatile
  2386  0077B4                     
  2387                           ;clsLcd.c: 7:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2388  0077B4  0E27               	movlw	39
  2389  0077B6  6E33               	movwf	??_LCD_Init^0,c
  2390  0077B8  0EF5               	movlw	245
  2391  0077BA                     u1057:
  2392  0077BA  2EE8               	decfsz	wreg,f,c
  2393  0077BC  D7FE               	bra	u1057
  2394  0077BE  2E33               	decfsz	??_LCD_Init^0,f,c
  2395  0077C0  D7FC               	bra	u1057
  2396  0077C2  F000               	nop	
  2397  0077C4                     
  2398                           ;clsLcd.c: 8:     LCD_Command(0x02);
  2399  0077C4  0E02               	movlw	2
  2400  0077C6  EC12  F03C         	call	_LCD_Command
  2401  0077CA                     
  2402                           ;clsLcd.c: 10:     LCD_Command(0x28);
  2403  0077CA  0E28               	movlw	40
  2404  0077CC  EC12  F03C         	call	_LCD_Command
  2405  0077D0                     
  2406                           ;clsLcd.c: 12:  LCD_Command(0x01);
  2407  0077D0  0E01               	movlw	1
  2408  0077D2  EC12  F03C         	call	_LCD_Command
  2409  0077D6                     
  2410                           ;clsLcd.c: 13:     LCD_Command(0x0c);
  2411  0077D6  0E0C               	movlw	12
  2412  0077D8  EC12  F03C         	call	_LCD_Command
  2413  0077DC                     
  2414                           ;clsLcd.c: 14:  LCD_Command(0x06);
  2415  0077DC  0E06               	movlw	6
  2416  0077DE  EC12  F03C         	call	_LCD_Command
  2417  0077E2  0012               	return		;funcret
  2418  0077E4                     __end_of_LCD_Init:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _LCD_Clear *****************
  2422 ;; Defined at:
  2423 ;;		line 79 in file "clsLcd.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2437 ;;      Params:         0       0       0       0       0       0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2440 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 1
  2444 ;; This function calls:
  2445 ;;		_LCD_Command
  2446 ;; This function is called by:
  2447 ;;		_menu
  2448 ;;		_main_rtc
  2449 ;;		_keypad_ini
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text17
  2454  007722                     __ptext17:
  2455                           	callstack 0
  2456  007722                     _LCD_Clear:
  2457                           	callstack 28
  2458  007722                     
  2459                           ;clsLcd.c: 81:     LCD_Command(0x01);
  2460  007722  0E01               	movlw	1
  2461  007724  EC12  F03C         	call	_LCD_Command
  2462  007728  0012               	return		;funcret
  2463  00772A                     __end_of_LCD_Clear:
  2464                           	callstack 0
  2465                           
  2466 ;; *************** function _LCD_Command *****************
  2467 ;; Defined at:
  2468 ;;		line 17 in file "clsLcd.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  cmd             1    wreg     unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  cmd             1    1[COMRAM] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2482 ;;      Params:         0       0       0       0       0       0       0       0       0
  2483 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2484 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2485 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2486 ;;Total ram usage:        2 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_LCD_Init
  2492 ;;		_LCD_String_xy
  2493 ;;		_LCD_Clear
  2494 ;;		_keypad_ini
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text18
  2499  007824                     __ptext18:
  2500                           	callstack 0
  2501  007824                     _LCD_Command:
  2502                           	callstack 26
  2503                           
  2504                           ;incstack = 0
  2505                           ;LCD_Command@cmd stored from wreg
  2506  007824  6E32               	movwf	LCD_Command@cmd^0,c
  2507  007826                     
  2508                           ;clsLcd.c: 17: void LCD_Command(unsigned char cmd );clsLcd.c: 18: {;clsLcd.c: 19:  LATB 
      +                          = (LATB & 0x0f) |(0xF0 & cmd);
  2509  007826  C032  F031         	movff	LCD_Command@cmd,??_LCD_Command
  2510  00782A  0EF0               	movlw	240
  2511  00782C  1631               	andwf	??_LCD_Command^0,f,c
  2512  00782E  508A               	movf	138,w,c	;volatile
  2513  007830  0B0F               	andlw	15
  2514  007832  1031               	iorwf	??_LCD_Command^0,w,c
  2515  007834  6E8A               	movwf	138,c	;volatile
  2516  007836                     
  2517                           ;clsLcd.c: 20:  LATB2 = 0;
  2518  007836  948A               	bcf	3978,2,c	;volatile
  2519  007838                     
  2520                           ;clsLcd.c: 21:  LATB3 = 1;
  2521  007838  868A               	bsf	3978,3,c	;volatile
  2522  00783A                     
  2523                           ;clsLcd.c: 22:  __nop();
  2524  00783A  F000               	nop	
  2525  00783C                     
  2526                           ;clsLcd.c: 23:  LATB3 = 0;
  2527  00783C  968A               	bcf	3978,3,c	;volatile
  2528  00783E                     
  2529                           ;clsLcd.c: 24:  _delay((unsigned long)((1)*(8000000/4000.0)));
  2530  00783E  0E03               	movlw	3
  2531  007840  6E31               	movwf	??_LCD_Command^0,c
  2532  007842  0E98               	movlw	152
  2533  007844                     u1067:
  2534  007844  2EE8               	decfsz	wreg,f,c
  2535  007846  D7FE               	bra	u1067
  2536  007848  2E31               	decfsz	??_LCD_Command^0,f,c
  2537  00784A  D7FC               	bra	u1067
  2538  00784C                     
  2539                           ;clsLcd.c: 25:     LATB = (LATB & 0x0f) | (cmd<<4);
  2540  00784C  C032  F031         	movff	LCD_Command@cmd,??_LCD_Command
  2541  007850  3A31               	swapf	??_LCD_Command^0,f,c
  2542  007852  0EF0               	movlw	240
  2543  007854  1631               	andwf	??_LCD_Command^0,f,c
  2544  007856  508A               	movf	138,w,c	;volatile
  2545  007858  0B0F               	andlw	15
  2546  00785A  1031               	iorwf	??_LCD_Command^0,w,c
  2547  00785C  6E8A               	movwf	138,c	;volatile
  2548  00785E                     
  2549                           ;clsLcd.c: 26:  LATB3 = 1;
  2550  00785E  868A               	bsf	3978,3,c	;volatile
  2551  007860                     
  2552                           ;clsLcd.c: 27:  __nop();
  2553  007860  F000               	nop	
  2554  007862                     
  2555                           ;clsLcd.c: 28:  LATB3 = 0;
  2556  007862  968A               	bcf	3978,3,c	;volatile
  2557                           
  2558                           ;clsLcd.c: 29:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2559  007864  0E08               	movlw	8
  2560  007866  6E31               	movwf	??_LCD_Command^0,c
  2561  007868  0ECA               	movlw	202
  2562  00786A                     u1077:
  2563  00786A  2EE8               	decfsz	wreg,f,c
  2564  00786C  D7FE               	bra	u1077
  2565  00786E  2E31               	decfsz	??_LCD_Command^0,f,c
  2566  007870  D7FC               	bra	u1077
  2567  007872  0012               	return		;funcret
  2568  007874                     __end_of_LCD_Command:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _Keypad_Key_Press *****************
  2572 ;; Defined at:
  2573 ;;		line 69 in file "clsTeclado.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  keypad_deco    17    0[COMRAM] const unsigned char [17]
  2578 ;;  fila            2   19[COMRAM] unsigned int 
  2579 ;;  tec             2   17[COMRAM] unsigned int 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      unsigned char 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0
  2590 ;;      Locals:        21       0       0       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2592 ;;      Totals:        21       0       0       0       0       0       0       0       0
  2593 ;;Total ram usage:       21 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_menu
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text19
  2603  0079FA                     __ptext19:
  2604                           	callstack 0
  2605  0079FA                     _Keypad_Key_Press:
  2606                           	callstack 29
  2607  0079FA                     
  2608                           ;clsTeclado.c: 71:  const unsigned char keypad_deco[17]=
  2609  0079FA  0E7D               	movlw	low Keypad_Key_Press@F3196
  2610  0079FC  6EF6               	movwf	tblptrl,c
  2611  0079FE                     	if	1	;There is more than 1 active tblptr byte
  2612  0079FE  0E7E               	movlw	high Keypad_Key_Press@F3196
  2613  007A00  6EF7               	movwf	tblptrh,c
  2614  007A02                     	endif
  2615  007A02                     	if	0	;There are less than 3 active tblptr bytes
  2616  007A02                     	endif
  2617  007A02  EE20  F031         	lfsr	2,Keypad_Key_Press@keypad_deco
  2618  007A06  0E10               	movlw	16
  2619  007A08                     u140:
  2620  007A08  0009               	tblrd		*+
  2621  007A0A  CFF5 FFDE          	movff	tablat,postinc2
  2622  007A0E  06E8               	decf	wreg,f,c
  2623  007A10  E2FB               	bc	u140
  2624  007A12                     
  2625                           ;clsTeclado.c: 74:     unsigned int tec = 0, fila;
  2626  007A12  0E00               	movlw	0
  2627  007A14  6E43               	movwf	(Keypad_Key_Press@tec+1)^0,c
  2628  007A16  0E00               	movlw	0
  2629  007A18  6E42               	movwf	Keypad_Key_Press@tec^0,c
  2630  007A1A                     
  2631                           ;clsTeclado.c: 77:     for (fila = 0b00000001; fila < 0b00010000; fila <<= 1)
  2632  007A1A  0E00               	movlw	0
  2633  007A1C  6E45               	movwf	(Keypad_Key_Press@fila+1)^0,c
  2634  007A1E  0E01               	movlw	1
  2635  007A20  6E44               	movwf	Keypad_Key_Press@fila^0,c
  2636  007A22                     l1272:
  2637                           
  2638                           ;clsTeclado.c: 78:     {;clsTeclado.c: 79:         LATB =fila<<4;
  2639  007A22  3844               	swapf	Keypad_Key_Press@fila^0,w,c
  2640  007A24  0BF0               	andlw	240
  2641  007A26  6E8A               	movwf	138,c	;volatile
  2642  007A28                     
  2643                           ;clsTeclado.c: 80:         if (PORTBbits.RB2== 1) break; tec++;
  2644  007A28  A481               	btfss	129,2,c	;volatile
  2645  007A2A  EF19  F03D         	goto	u151
  2646  007A2E  EF1B  F03D         	goto	u150
  2647  007A32                     u151:
  2648  007A32  EF1D  F03D         	goto	l1278
  2649  007A36                     u150:
  2650  007A36  EF4E  F03D         	goto	l1300
  2651  007A3A                     l1278:
  2652  007A3A  4A42               	infsnz	Keypad_Key_Press@tec^0,f,c
  2653  007A3C  2A43               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  2654  007A3E                     
  2655                           ;clsTeclado.c: 81:         if (PORTBbits.RB3 == 1) break; tec++;
  2656  007A3E  A681               	btfss	129,3,c	;volatile
  2657  007A40  EF24  F03D         	goto	u161
  2658  007A44  EF26  F03D         	goto	u160
  2659  007A48                     u161:
  2660  007A48  EF28  F03D         	goto	l1284
  2661  007A4C                     u160:
  2662  007A4C  EF4E  F03D         	goto	l1300
  2663  007A50                     l1284:
  2664  007A50  4A42               	infsnz	Keypad_Key_Press@tec^0,f,c
  2665  007A52  2A43               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  2666  007A54                     
  2667                           ;clsTeclado.c: 82:         if (PORTBbits.RB4 == 1) break; tec++;
  2668  007A54  A881               	btfss	129,4,c	;volatile
  2669  007A56  EF2F  F03D         	goto	u171
  2670  007A5A  EF31  F03D         	goto	u170
  2671  007A5E                     u171:
  2672  007A5E  EF33  F03D         	goto	l1290
  2673  007A62                     u170:
  2674  007A62  EF4E  F03D         	goto	l1300
  2675  007A66                     l1290:
  2676  007A66  4A42               	infsnz	Keypad_Key_Press@tec^0,f,c
  2677  007A68  2A43               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  2678  007A6A                     
  2679                           ;clsTeclado.c: 83:         if (PORTBbits.RB5 == 1) break; tec++;
  2680  007A6A  AA81               	btfss	129,5,c	;volatile
  2681  007A6C  EF3A  F03D         	goto	u181
  2682  007A70  EF3C  F03D         	goto	u180
  2683  007A74                     u181:
  2684  007A74  EF3E  F03D         	goto	l1296
  2685  007A78                     u180:
  2686  007A78  EF4E  F03D         	goto	l1300
  2687  007A7C                     l1296:
  2688  007A7C  4A42               	infsnz	Keypad_Key_Press@tec^0,f,c
  2689  007A7E  2A43               	incf	(Keypad_Key_Press@tec+1)^0,f,c
  2690                           
  2691                           ;clsTeclado.c: 84:     }
  2692  007A80  90D8               	bcf	status,0,c
  2693  007A82  3644               	rlcf	Keypad_Key_Press@fila^0,f,c
  2694  007A84  3645               	rlcf	(Keypad_Key_Press@fila+1)^0,f,c
  2695  007A86  5045               	movf	(Keypad_Key_Press@fila+1)^0,w,c
  2696  007A88  E109               	bnz	u190
  2697  007A8A  0E10               	movlw	16
  2698  007A8C  5C44               	subwf	Keypad_Key_Press@fila^0,w,c
  2699  007A8E  A0D8               	btfss	status,0,c
  2700  007A90  EF4C  F03D         	goto	u191
  2701  007A94  EF4E  F03D         	goto	u190
  2702  007A98                     u191:
  2703  007A98  EF11  F03D         	goto	l1272
  2704  007A9C                     u190:
  2705  007A9C                     l1300:
  2706                           
  2707                           ;clsTeclado.c: 85:     PORTB = 0x00;
  2708  007A9C  0E00               	movlw	0
  2709  007A9E  6E81               	movwf	129,c	;volatile
  2710  007AA0                     
  2711                           ;clsTeclado.c: 86:     return keypad_deco[tec];
  2712  007AA0  0E31               	movlw	low Keypad_Key_Press@keypad_deco
  2713  007AA2  2442               	addwf	Keypad_Key_Press@tec^0,w,c
  2714  007AA4  6ED9               	movwf	fsr2l,c
  2715  007AA6  0E00               	movlw	high Keypad_Key_Press@keypad_deco
  2716  007AA8  2043               	addwfc	(Keypad_Key_Press@tec+1)^0,w,c
  2717  007AAA  6EDA               	movwf	fsr2h,c
  2718  007AAC  50DF               	movf	indf2,w,c
  2719  007AAE  0012               	return		;funcret
  2720  007AB0                     __end_of_Keypad_Key_Press:
  2721                           	callstack 0
  2722                           
  2723                           	psect	rparam
  2724  0000                     
  2725                           	psect	idloc
  2726                           
  2727                           ;Config register IDLOC0 @ 0x200000
  2728                           ;	unspecified, using default values
  2729  200000                     	org	2097152
  2730  200000  FF                 	db	255
  2731                           
  2732                           ;Config register IDLOC1 @ 0x200001
  2733                           ;	unspecified, using default values
  2734  200001                     	org	2097153
  2735  200001  FF                 	db	255
  2736                           
  2737                           ;Config register IDLOC2 @ 0x200002
  2738                           ;	unspecified, using default values
  2739  200002                     	org	2097154
  2740  200002  FF                 	db	255
  2741                           
  2742                           ;Config register IDLOC3 @ 0x200003
  2743                           ;	unspecified, using default values
  2744  200003                     	org	2097155
  2745  200003  FF                 	db	255
  2746                           
  2747                           ;Config register IDLOC4 @ 0x200004
  2748                           ;	unspecified, using default values
  2749  200004                     	org	2097156
  2750  200004  FF                 	db	255
  2751                           
  2752                           ;Config register IDLOC5 @ 0x200005
  2753                           ;	unspecified, using default values
  2754  200005                     	org	2097157
  2755  200005  FF                 	db	255
  2756                           
  2757                           ;Config register IDLOC6 @ 0x200006
  2758                           ;	unspecified, using default values
  2759  200006                     	org	2097158
  2760  200006  FF                 	db	255
  2761                           
  2762                           ;Config register IDLOC7 @ 0x200007
  2763                           ;	unspecified, using default values
  2764  200007                     	org	2097159
  2765  200007  FF                 	db	255
  2766                           
  2767                           	psect	config
  2768                           
  2769                           ;Config register CONFIG1L @ 0x300000
  2770                           ;	PLL Prescaler Selection bits
  2771                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2772                           ;	System Clock Postscaler Selection bits
  2773                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2774                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2775                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2776  300000                     	org	3145728
  2777  300000  00                 	db	0
  2778                           
  2779                           ;Config register CONFIG1H @ 0x300001
  2780                           ;	Oscillator Selection bits
  2781                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2782                           ;	Fail-Safe Clock Monitor Enable bit
  2783                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2784                           ;	Internal/External Oscillator Switchover bit
  2785                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2786  300001                     	org	3145729
  2787  300001  09                 	db	9
  2788                           
  2789                           ;Config register CONFIG2L @ 0x300002
  2790                           ;	Power-up Timer Enable bit
  2791                           ;	PWRT = OFF, PWRT disabled
  2792                           ;	Brown-out Reset Enable bits
  2793                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2794                           ;	Brown-out Reset Voltage bits
  2795                           ;	BORV = 3, Minimum setting 2.05V
  2796                           ;	USB Voltage Regulator Enable bit
  2797                           ;	VREGEN = OFF, USB voltage regulator disabled
  2798  300002                     	org	3145730
  2799  300002  1F                 	db	31
  2800                           
  2801                           ;Config register CONFIG2H @ 0x300003
  2802                           ;	Watchdog Timer Enable bit
  2803                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2804                           ;	Watchdog Timer Postscale Select bits
  2805                           ;	WDTPS = 32768, 1:32768
  2806  300003                     	org	3145731
  2807  300003  1E                 	db	30
  2808                           
  2809                           ; Padding undefined space
  2810  300004                     	org	3145732
  2811  300004  FF                 	db	255
  2812                           
  2813                           ;Config register CONFIG3H @ 0x300005
  2814                           ;	CCP2 MUX bit
  2815                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2816                           ;	PORTB A/D Enable bit
  2817                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2818                           ;	Low-Power Timer 1 Oscillator Enable bit
  2819                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2820                           ;	MCLR Pin Enable bit
  2821                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2822  300005                     	org	3145733
  2823  300005  81                 	db	129
  2824                           
  2825                           ;Config register CONFIG4L @ 0x300006
  2826                           ;	Stack Full/Underflow Reset Enable bit
  2827                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2828                           ;	Single-Supply ICSP Enable bit
  2829                           ;	LVP = OFF, Single-Supply ICSP disabled
  2830                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2831                           ;	ICPRT = OFF, ICPORT disabled
  2832                           ;	Extended Instruction Set Enable bit
  2833                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2834                           ;	Background Debugger Enable bit
  2835                           ;	DEBUG = 0x1, unprogrammed default
  2836  300006                     	org	3145734
  2837  300006  81                 	db	129
  2838                           
  2839                           ; Padding undefined space
  2840  300007                     	org	3145735
  2841  300007  FF                 	db	255
  2842                           
  2843                           ;Config register CONFIG5L @ 0x300008
  2844                           ;	Code Protection bit
  2845                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2846                           ;	Code Protection bit
  2847                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2848                           ;	Code Protection bit
  2849                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2850                           ;	Code Protection bit
  2851                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2852  300008                     	org	3145736
  2853  300008  0F                 	db	15
  2854                           
  2855                           ;Config register CONFIG5H @ 0x300009
  2856                           ;	Boot Block Code Protection bit
  2857                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2858                           ;	Data EEPROM Code Protection bit
  2859                           ;	CPD = OFF, Data EEPROM is not code-protected
  2860  300009                     	org	3145737
  2861  300009  C0                 	db	192
  2862                           
  2863                           ;Config register CONFIG6L @ 0x30000A
  2864                           ;	Write Protection bit
  2865                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2866                           ;	Write Protection bit
  2867                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2868                           ;	Write Protection bit
  2869                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2870                           ;	Write Protection bit
  2871                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2872  30000A                     	org	3145738
  2873  30000A  0F                 	db	15
  2874                           
  2875                           ;Config register CONFIG6H @ 0x30000B
  2876                           ;	Configuration Register Write Protection bit
  2877                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2878                           ;	Boot Block Write Protection bit
  2879                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2880                           ;	Data EEPROM Write Protection bit
  2881                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2882  30000B                     	org	3145739
  2883  30000B  E0                 	db	224
  2884                           
  2885                           ;Config register CONFIG7L @ 0x30000C
  2886                           ;	Table Read Protection bit
  2887                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2888                           ;	Table Read Protection bit
  2889                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2890                           ;	Table Read Protection bit
  2891                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2892                           ;	Table Read Protection bit
  2893                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2894  30000C                     	org	3145740
  2895  30000C  0F                 	db	15
  2896                           
  2897                           ;Config register CONFIG7H @ 0x30000D
  2898                           ;	Boot Block Table Read Protection bit
  2899                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2900  30000D                     	org	3145741
  2901  30000D  40                 	db	64
  2902                           tosu	equ	0xFFF
  2903                           tosh	equ	0xFFE
  2904                           tosl	equ	0xFFD
  2905                           stkptr	equ	0xFFC
  2906                           pclatu	equ	0xFFB
  2907                           pclath	equ	0xFFA
  2908                           pcl	equ	0xFF9
  2909                           tblptru	equ	0xFF8
  2910                           tblptrh	equ	0xFF7
  2911                           tblptrl	equ	0xFF6
  2912                           tablat	equ	0xFF5
  2913                           prodh	equ	0xFF4
  2914                           prodl	equ	0xFF3
  2915                           indf0	equ	0xFEF
  2916                           postinc0	equ	0xFEE
  2917                           postdec0	equ	0xFED
  2918                           preinc0	equ	0xFEC
  2919                           plusw0	equ	0xFEB
  2920                           fsr0h	equ	0xFEA
  2921                           fsr0l	equ	0xFE9
  2922                           wreg	equ	0xFE8
  2923                           indf1	equ	0xFE7
  2924                           postinc1	equ	0xFE6
  2925                           postdec1	equ	0xFE5
  2926                           preinc1	equ	0xFE4
  2927                           plusw1	equ	0xFE3
  2928                           fsr1h	equ	0xFE2
  2929                           fsr1l	equ	0xFE1
  2930                           bsr	equ	0xFE0
  2931                           indf2	equ	0xFDF
  2932                           postinc2	equ	0xFDE
  2933                           postdec2	equ	0xFDD
  2934                           preinc2	equ	0xFDC
  2935                           plusw2	equ	0xFDB
  2936                           fsr2h	equ	0xFDA
  2937                           fsr2l	equ	0xFD9
  2938                           status	equ	0xFD8

Data Sizes:
    Strings     369
    Constant    17
    Data        25
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      84
    BANK0           160      0      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_33(CODE[4]), STR_32(CODE[4]), STR_31(CODE[8]), STR_30(CODE[8]), 
		 -> STR_29(CODE[4]), STR_28(CODE[4]), STR_27(CODE[8]), STR_26(CODE[4]), 
		 -> STR_25(CODE[4]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    S959_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main_rtc@year(COMRAM[10]), main_rtc@month(COMRAM[10]), main_rtc@date(COMRAM[10]), main_rtc@hours(COMRAM[10]), 
		 -> main_rtc@mins(COMRAM[10]), main_rtc@secs(COMRAM[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main_rtc@year(COMRAM[10]), main_rtc@month(COMRAM[10]), main_rtc@date(COMRAM[10]), main_rtc@hours(COMRAM[10]), 
		 -> main_rtc@mins(COMRAM[10]), main_rtc@secs(COMRAM[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_41(CODE[12]), main_rtc@date(COMRAM[10]), main_rtc@hours(COMRAM[10]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[17]), STR_21(CODE[18]), STR_20(CODE[17]), 
		 -> STR_19(CODE[18]), STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[16]), 
		 -> STR_15(CODE[18]), STR_14(CODE[18]), STR_13(CODE[18]), STR_12(CODE[19]), 
		 -> STR_11(CODE[16]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[16]), 
		 -> STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[13]), STR_4(CODE[14]), 
		 -> STR_3(CODE[9]), STR_2(CODE[11]), STR_1(CODE[16]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_41(CODE[12]), STR_40(CODE[4]), STR_39(CODE[4]), STR_38(CODE[4]), 
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> main_rtc@year(COMRAM[10]), main_rtc@month(COMRAM[10]), main_rtc@date(COMRAM[10]), main_rtc@hours(COMRAM[10]), 
		 -> main_rtc@mins(COMRAM[10]), main_rtc@secs(COMRAM[10]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[17]), STR_21(CODE[18]), STR_20(CODE[17]), STR_19(CODE[18]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[16]), STR_15(CODE[18]), 
		 -> STR_14(CODE[18]), STR_13(CODE[18]), STR_12(CODE[19]), STR_11(CODE[16]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[16]), STR_7(CODE[16]), 
		 -> STR_6(CODE[16]), STR_5(CODE[13]), STR_4(CODE[14]), STR_3(CODE[9]), 
		 -> STR_2(CODE[11]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_menu
    _menu->_Keypad_Key_Press
    _despertador->_recuperarHoraBluetooth
    _recuperarHoraBluetooth->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17163
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 2     2      0   17163
                                             21 COMRAM     2     2      0
                   _Keypad_Key_Press
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                        _despertador
                       _ledencendido
                      _motorApertura
                        _motorCierre
                          _motorStop
                          _motor_ini
 ---------------------------------------------------------------------------------
 (2) _motor_ini                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motorStop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motorCierre                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motorApertura                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ledencendido                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _despertador                                          2     2      0   11468
                                             10 COMRAM     2     2      0
                      _LCD_String_xy
             _recuperarHoraBluetooth
            _recuperarHorarioTeclado
 ---------------------------------------------------------------------------------
 (3) _recuperarHoraBluetooth                               1     1      0    5908
                                              9 COMRAM     1     1      0
                      _LCD_String_xy
                  _USART_ReceiveChar
                       _ledActivador
                           _lederror
            _recuperarHorarioTeclado
 ---------------------------------------------------------------------------------
 (3) _recuperarHorarioTeclado                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lederror                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ledActivador                                         3     1      2     250
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LCD_String_xy                                        5     2      3    5560
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (5) _LCD_String                                           2     0      2    1139
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (6) _LCD_Char                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      30
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (5) _LCD_Command                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Keypad_Key_Press                                    21    21      0      75
                                              0 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _menu
     _Keypad_Key_Press
     _LCD_Clear
       _LCD_Command
     _LCD_Init
       _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _despertador
       _LCD_String_xy
       _recuperarHoraBluetooth
         _LCD_String_xy
         _USART_ReceiveChar
         _ledActivador
         _lederror
         _recuperarHorarioTeclado
       _recuperarHorarioTeclado
     _ledencendido
     _motorApertura
     _motorCierre
     _motorStop
     _motor_ini

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       C       5        7.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      54       1       88.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60      20        0.0%
DATA                 0      0      60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 10 17:00:35 2021

                               l7 772E                    _varFechaAlarma 0026  
                    ?_LCD_Command 0031                                l52 770E  
                              l80 77AC                                l64 7712  
                              l81 7796                                l49 7C36  
                              l57 79F8                                l75 7780  
                              l85 77AE                                l77 7782  
                              u60 7764                                u61 7760  
                     ?_LCD_String 0033                               l102 77E2  
                             l105 7872                               l122 7728  
                             l114 7976                               l108 78C2  
                             l119 7822                               l411 7766  
                             l333 7AAE                               l190 771A  
                             l408 7756                               l193 7720  
                             l187 7716                               l196 773A  
                             u140 7A08                               u150 7A36  
                             u151 7A32                               u160 7A4C  
                             u161 7A48                               u170 7A62  
                             u171 7A5E                               u180 7A78  
                             u500 7966                               u181 7A74  
                             u190 7A9C                               u510 7976  
                             u191 7A98                               u511 7972  
                             u520 7796                               u600 79F4  
                             u521 7792                               u601 79F0  
                             u530 77F6                               u610 7D36  
                             u507 795C                               u531 77F2  
                             u611 7D32                               u540 777A  
                             u620 7DC2                               u541 7776  
                             u621 7DBE                               u550 7B08  
                             u630 7DD4                               u551 7B04  
                             u631 7DD0                               u560 7B1A  
                             u640 7DE6                               u561 7B16  
                             u641 7DE2                               u490 793E  
                             u570 7B2C                               u650 7E60  
                             u571 7B28                               u651 7E5C  
                             u580 7C32                               u581 7C2E  
                             u590 79DE                               u591 79DA  
                             u497 7934                               u907 7CE2  
                             u917 7D0C                               u927 7D68  
                             u937 7D84                               u947 7E06  
                             u957 7E22                               u877 7C64  
                             u967 7994                               u887 7C8E  
                             u977 79BE                               u897 7CB8  
                             u987 7B84                               u997 7BA4  
                             _Day 000C                               _idx 002C  
                             _min 0010                               _sec 0012  
                             wreg 000FE8                       LCD_Char@dat 0032  
                            l1100 7876                              l1110 788E  
                            l1102 7886                              l1120 7826  
                            l1112 789C                              l1104 7888  
                            l1130 783E                              l1122 7836  
                            l1114 78AE                              l1106 788A  
                            l1300 7A9C                              l1132 784C  
                            l1124 7838                              l1116 78B0  
                            l1108 788C                              l1302 7AA0  
                            l1134 785E                              l1126 783A  
                            l1118 78B2                              l1310 7718  
                            l1136 7860                              l1128 783C  
                            l1138 7862                              l1250 77CA  
                            l1170 7764                              l1242 7710  
                            l1306 7714                              l1252 77D0  
                            l1244 77B0                              l1308 771C  
                            l1260 7732                              l1262 79FA  
                            l1254 77D6                              l1246 77B4  
                            l1280 7A3E                              l1272 7A22  
                            l1264 7A12                              l1256 77DC  
                            l1248 77C4                              l1168 7756  
                            l1290 7A66                              l1274 7A28  
                            l1266 7A1A                              l1258 7722  
                            l1292 7A6A                              l1284 7A50  
                            l1700 7B8C                              l1286 7A54  
                            l1278 7A3A                              l1710 7BDE  
                            l1702 7B9E                              l1296 7A7C  
                            l1640 791A                              l1720 7C32  
                            l1712 7BEC                              l1704 7BAC  
                            l1800 7DD4                              l1298 7A86  
                            l1642 791E                              l1650 7798  
                            l1714 7BFE                              l1706 7BBE  
                            l1730 79DE                              l1722 7978  
                            l1810 7E18                              l1644 7942  
                            l1660 77FE                              l1652 77A6  
                            l1716 7C10                              l1708 7BCC  
                            l1732 79E2                              l1724 798A  
                            l1812 7E30                              l1804 7DEA  
                            l1740 7C40                              l1820 772A  
                            l1646 7946                              l1662 7808  
                            l1654 77E6                              l1670 777A  
                            l1718 7C22                              l1734 79F4  
                            l1726 79A2                              l1814 7E46  
                            l1806 7DFC                              l1750 7C84  
                            l1742 7C44                              l1664 7810  
                            l1656 77E6                              l1648 7784  
                            l1680 7ADE                              l1672 7AB0  
                            l1728 79CC                              l1808 7E14  
                            l1816 7E4E                              l1760 7CF0  
                            l1752 7C9C                              l1744 7C48  
                            l1736 7C38                              l1666 7816  
                            l1658 77F6                              l1690 7B2C  
                            l1682 7AEA                              l1674 7AB4  
                            l1818 7E64                              l1762 7D02  
                            l1754 7CAE                              l1746 7C5A  
                            l1738 7C3C                              l1668 7768  
                            l1692 7B44                              l1684 7AF6  
                            l1676 7AC0                              l1780 7D24  
                            l1764 7D1A                              l1756 7CC6  
                            l1748 7C72                              l1686 7B08  
                            l1694 7B54                              l1678 7AD2  
                            l1790 7D7A                              l1782 7D36  
                            l1766 7D20                              l1758 7CD8  
                            l1696 7B6C                              l1688 7B1A  
                            l1792 7D92                              l1784 7D4C  
                            l1698 7B7E                              l1794 7DA8  
                            l1786 7D5E                              l1778 7D24  
                            l1788 7D76                              l1796 7DB0  
                            l1798 7DC2     __end_ofKeypad_Key_Press@F3196 7E8E  
                            STR_1 7F6E                              STR_2 7FB5  
                            STR_3 7FC0                              STR_4 7F8E  
                            STR_5 7F9C                              STR_6 7F7E  
                            STR_7 7F4E                              STR_8 7F5E  
                            STR_9 7F2D                              u1007 7BC4  
                            u1017 7BE4                              u1027 779E  
                            u1037 7894                              u1047 78BA  
                            u1057 77BA                              u1067 7844  
                            u1077 786A                              _LATB 000F8A  
                            _LATD 000F8C                              _RCIF 007CF5  
                            _RBPU 007F8F                              _TXIF 007CF4  
                            _Date 000A                              _Year 0006  
                   ?_ledencendido 0031                              _main 772A  
                            _menu 7C38                              _hour 000E  
              __size_of_LCD_Clear 0008                              fsr0h 000FEA  
                            indf0 000FEF                              fsr0l 000FE9  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              start 0000  
                   _LCD_String_xy 77E4                      ___param_bank 000000  
                __end_of_LCD_Char 78C4                  __end_of_LCD_Init 77E4  
                           ?_main 0031                             ?_menu 0031  
                           STR_10 7F1C                             STR_11 7F3E  
                           STR_20 7EE9                             STR_12 7E8E  
                           STR_21 7EA1                             STR_13 7EC5  
                           STR_22 7EFA                             STR_14 7EB3  
                           STR_23 7FFC                             STR_31 7FC9  
                           STR_15 7ED7                             STR_24 7FF9  
                           STR_40 7FF1                             STR_25 7FD9  
                           STR_41 7FA9                             STR_17 7F0B  
                           STR_34 7FED                             STR_18 7EE9  
                           STR_35 7FE9                             STR_27 7FD1  
                           STR_19 7EA1                             STR_36 7FE1  
                           STR_37 7FDD                             STR_38 7FF5  
                           STR_39 7FE5                             _LATB2 007C52  
                           _LATB3 007C53                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _SPBRG 000FAF  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTD 000F83                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISD 000F95  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           _Month 0008                  _varMinutosAlarma 0028  
                  ??_ledencendido 0031                             tablat 000FF5  
                           status 000FD8               __size_of_LCD_String 005E  
                  ?_LCD_String_xy 0035              __end_of_ledActivador 77B0  
                 __initialization 78C4                      __end_of_main 7732  
                    __end_of_menu 7E7C                            ??_main 0048  
                          ??_menu 0046                 __end_of_LCD_Clear 772A  
                   __activetblptr 000002       Keypad_Key_Press@keypad_deco 0031  
                LCD_String_xy@msg 0036                  LCD_String_xy@pos 0035  
                LCD_String_xy@row 0038          ??_recuperarHoraBluetooth 003A  
         _recuperarHorarioTeclado 770E                            _OSCCON 000FD3  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
            __size_of_despertador 0082                      ?_motorCierre 0031  
                __end_of_lederror 7784         __size_of_Keypad_Key_Press 00B6  
                          _keypad 0060                            clear_0 790A  
                          _varAux 0030                            isa$std 000001  
                          _rowloc 002E              __size_of_LCD_Command 0050  
                    __pdataCOMRAM 0048                      __mediumconst 7E7C  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                         ?_LCD_Char 0031  
                      __accesstop 0060           __end_of__initialization 7910  
                       ?_LCD_Init 0031                   ??_LCD_String_xy 0038  
                   ___rparam_used 000001                 lederror@prmEstado 0031  
                  __pcstackCOMRAM 0031             ledActivador@prmEstado 0031  
                    __pidataBANK0 773D                      ??_LCD_String 0035  
            __end_of_ledencendido 7714             __end_of_motorApertura 7718  
       ??_recuperarHorarioTeclado 0031             __size_of_ledActivador 002C  
                      ??_LCD_Char 0031                        ??_LCD_Init 0033  
 __size_of_recuperarHoraBluetooth 0188                __end_of_LCD_String 7978  
              __size_of_motorStop 0006                __size_of_motor_ini 000A  
                    _ledActivador 7784                         ?_lederror 0031  
           Keypad_Key_Press@F3196 7E7D                     LCD_String@msg 0033  
                         __Hparam 0000                           __Lparam 0000  
 __end_of_recuperarHorarioTeclado 7710                  _Keypad_Key_Press 79FA  
            __size_of_motorCierre 0004                           __pcinit 78C4  
          _recuperarHoraBluetooth 7AB0                           __ramtop 0800  
                         __ptext0 772A                           __ptext1 7C38  
                         __ptext2 7732                           __ptext3 771C  
                         __ptext4 7718                           __ptext5 7714  
                         __ptext6 7710                           __ptext7 7978  
                         __ptext8 7AB0                           __ptext9 770E  
                         _col_loc 002F                        _varAbierta 0014  
                       _LCD_Clear 7722              end_of_initialization 7910  
                      ??_lederror 0033                     main_rtc@F3525 0048  
                  LCD_Command@cmd 0032                     __Lmediumconst 7E7C  
                      _varMinutos 0022                 __end_of_motorStop 7722  
               __end_of_motor_ini 773C             __size_of_ledencendido 0004  
                         postdec1 000FE5                           postinc0 000FEE  
                         postinc2 000FDE                         _PORTAbits 000F80  
                       _PORTBbits 000F81                         _PORTEbits 000F84  
                      ?_LCD_Clear 0031                     ??_despertador 003B  
                    _ledencendido 7710                 __size_of_LCD_Char 0050  
               __size_of_LCD_Init 0034                     ??_LCD_Command 0031  
                   __pidataCOMRAM 7749               start_initialization 78C4  
                   _varHoraAlarma 002A             __end_of_LCD_String_xy 7824  
             __end_of_despertador 79FA                 _USART_ReceiveChar 7756  
              ?_USART_ReceiveChar 0031                       __pdataBANK0 0060  
             ??_USART_ReceiveChar 0031               __end_of_LCD_Command 7874  
                     __pbssCOMRAM 0001                       ??_LCD_Clear 0033  
        __end_of_Keypad_Key_Press 7AB0         __end_of_USART_ReceiveChar 7768  
               __size_of_lederror 001C            __size_of_motorApertura 0004  
                   __pmediumconst 7E7C           ?_recuperarHoraBluetooth 0031  
        ?_recuperarHorarioTeclado 0031              Keypad_Key_Press@fila 0044  
           LCD_String_xy@location 0039                       _despertador 7978  
                        _LCD_Char 7874                          _LCD_Init 77B0  
                       _varFechaD 0016                         _pass_user 0001  
                       _varHorasD 001A                         _varOpcion 0054  
  __end_of_recuperarHoraBluetooth 7C38                     ??_motorCierre 0031  
                       _motorStop 771C                         _motor_ini 7732  
                     _LCD_Command 7824                     _motorApertura 7714  
                       copy_data0 78D8                         copy_data1 78F8  
      __size_of_USART_ReceiveChar 0012                          __Hrparam 0000  
                        __Lrparam 0000                        ?_motorStop 0031  
                      ?_motor_ini 0031               __end_of_motorCierre 771C  
                  ?_motorApertura 0031                          __ptext10 7768  
                        __ptext11 7784                          __ptext12 7756  
                        __ptext13 77E4                          __ptext14 791A  
                        __ptext15 7874                          __ptext16 77B0  
                        __ptext17 7722                          __ptext18 7824  
                        __ptext19 79FA                          _lederror 7768  
             Keypad_Key_Press@tec 0042                     __size_of_main 0008  
                   __size_of_menu 0244                          _varFecha 0020  
                        _varHoras 0024                          _password 004F  
                        _varTemp1 001E                          _varTemp2 001C  
                        _temp_col 002D                          isa$xinst 000000  
                      _LCD_String 791A                     ?_ledActivador 0031  
                     _varMinutosD 0018                 ?_Keypad_Key_Press 0031  
              ??_Keypad_Key_Press 0031                       ??_motorStop 0031  
                     ??_motor_ini 0031                       _motorCierre 7718  
                 ??_motorApertura 0031                    ??_ledActivador 0033  
          __size_of_LCD_String_xy 0040                      ?_despertador 0031  
__size_of_recuperarHorarioTeclado 0002  
